<?xml version="1.0" encoding="utf-8"?>
<root>
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AutoHedger.Name" xml:space="preserve">
    <value>Auto Hedge Delta</value>
  </data>
  <data name="AutoHedger.Description" xml:space="preserve">
    <value>Hedge delta by time (on every script execution)</value>
  </data>
  <data name="AutoHedger.HedgeDelta.Name" xml:space="preserve">
    <value>Align Delta</value>
  </data>
  <data name="AutoHedger.HedgeDelta.Description" xml:space="preserve">
    <value>Align delta to target level</value>
  </data>
  <data name="AutoHedger.DownDelta.Description" xml:space="preserve">
    <value>Possible delta decrease from target level</value>
  </data>
  <data name="AutoHedger.TargetDelta.Description" xml:space="preserve">
    <value>Target delta</value>
  </data>
  <data name="AutoHedger.UpDelta.Description" xml:space="preserve">
    <value>Possible delta increase from target level</value>
  </data>
  <data name="AutoHedger.BuyPrice.Name" xml:space="preserve">
    <value>Buy price</value>
  </data>
  <data name="AutoHedger.BuyPrice.Description" xml:space="preserve">
    <value>Price of hedge order to buy</value>
  </data>
  <data name="AutoHedger.SellPrice.Name" xml:space="preserve">
    <value>Sell price</value>
  </data>
  <data name="AutoHedger.SellPrice.Description" xml:space="preserve">
    <value>Price of hedge order to sell</value>
  </data>
  <data name="AutoHedger.WorkWithoutOptions.Name" xml:space="preserve">
    <value>Work without options</value>
  </data>
  <data name="AutoHedger.WorkWithoutOptions.Description" xml:space="preserve">
    <value>Permission to work without options</value>
  </data>
  <data name="PositionsManager.Name" xml:space="preserve">
    <value>Positions Manager</value>
  </data>
  <data name="PositionsManager.Description" xml:space="preserve">
    <value>Manager for virtual and real positions</value>
  </data>
  <data name="AskSmile.Name" xml:space="preserve">
    <value>Ask smile</value>
  </data>
  <data name="AskSmile.Description" xml:space="preserve">
    <value>Options ask prices. Strike is ignored if there is no offer in it.</value>
  </data>
  <data name="AskSmile.StrikeType.Name" xml:space="preserve">
    <value>Option Type</value>
  </data>
  <data name="AskSmile.StrikeType.Description" xml:space="preserve">
    <value>Type of option to be used in handler (put, call, any)</value>
  </data>
  <data name="AskSmile.Shift.Name" xml:space="preserve">
    <value>Shift Time</value>
  </data>
  <data name="AskSmile.Shift.Description" xml:space="preserve">
    <value>Shift calculations back in time</value>
  </data>
  <data name="AskStrikes.Name" xml:space="preserve">
    <value>Option Asks</value>
  </data>
  <data name="AskStrikes.Description" xml:space="preserve">
    <value>Options ask prices. Price is set to 0 if there is no offer in it. Handler returns a list of Double2.</value>
  </data>
  <data name="AskStrikes.StrikeType.Name" xml:space="preserve">
    <value>Option Type</value>
  </data>
  <data name="AskStrikes.StrikeType.Description" xml:space="preserve">
    <value>Type of option to be used in handler (put, call, any)</value>
  </data>
  <data name="BasePx.Name" xml:space="preserve">
    <value>Base Price</value>
  </data>
  <data name="BasePx.Description" xml:space="preserve">
    <value>A base asset price. Various algorithms are applied in calculation (fixed price, the last trade, quote midpoint, etc). It is a stream handler.</value>
  </data>
  <data name="BasePx.PxMode.Name" xml:space="preserve">
    <value>Algorythm</value>
  </data>
  <data name="BasePx.PxMode.Description" xml:space="preserve">
    <value>Algorythm to get base asset's price (FixedPx, LastTrade, etc)</value>
  </data>
  <data name="BasePx.DisplayUnits.Name" xml:space="preserve">
    <value>Display Units</value>
  </data>
  <data name="BasePx.DisplayUnits.Description" xml:space="preserve">
    <value>Display units (hundreds, thousands, as is)</value>
  </data>
  <data name="BasePx.FixedPx.Name" xml:space="preserve">
    <value>Price</value>
  </data>
  <data name="BasePx.FixedPx.Description" xml:space="preserve">
    <value>Price for algorythm FixedPx</value>
  </data>
  <data name="BasePx.DisplayPrice.Name" xml:space="preserve">
    <value>Display Price</value>
  </data>
  <data name="BasePx.DisplayPrice.Description" xml:space="preserve">
    <value>Base asset price (only to display at UI)</value>
  </data>
  <data name="BidSmile.Name" xml:space="preserve">
    <value>Bid smile</value>
  </data>
  <data name="BidSmile.Description" xml:space="preserve">
    <value>Options bid prices. Strike is ignored if there is no demand in it.</value>
  </data>
  <data name="BidSmile.StrikeType.Name" xml:space="preserve">
    <value>Option Type</value>
  </data>
  <data name="BidSmile.StrikeType.Description" xml:space="preserve">
    <value>Type of option to be used in handler (put, call, any)</value>
  </data>
  <data name="BidSmile.Shift.Name" xml:space="preserve">
    <value>Shift Time</value>
  </data>
  <data name="BidSmile.Shift.Description" xml:space="preserve">
    <value>Shift calculations back in time</value>
  </data>
  <data name="BidStrikes.Name" xml:space="preserve">
    <value>Option Bids</value>
  </data>
  <data name="BidStrikes.Description" xml:space="preserve">
    <value>Options bid prices. Price is set to 0 if there is no demand in it. Handler returns a list of Double2.</value>
  </data>
  <data name="BidStrikes.StrikeType.Name" xml:space="preserve">
    <value>Option Type</value>
  </data>
  <data name="BidStrikes.StrikeType.Description" xml:space="preserve">
    <value>Type of option to be used in handler (put, call, any)</value>
  </data>
  <data name="CentralStrike.Name" xml:space="preserve">
    <value>Central Strike</value>
  </data>
  <data name="CentralStrike.Description" xml:space="preserve">
    <value>Central strike of an Option Series</value>
  </data>
  <data name="CloseVirtualFutPosition.Name" xml:space="preserve">
    <value>Close Virtual Pos</value>
  </data>
  <data name="CloseVirtualFutPosition.Description" xml:space="preserve">
    <value>Close virtual fut position in base asset</value>
  </data>
  <data name="ExchangeTheorPx.Name" xml:space="preserve">
    <value>Exchange Theor Px</value>
  </data>
  <data name="ExchangeTheorPx.Description" xml:space="preserve">
    <value>Theoretical option price provided by exchange. Additional linear transformation is allowed.</value>
  </data>
  <data name="ExchangeTheorSigma2.Name" xml:space="preserve">
    <value>Exchange Smile</value>
  </data>
  <data name="ExchangeTheorSigma2.Description" xml:space="preserve">
    <value>Exchange smile (stream handler)</value>
  </data>
  <data name="ExchangeTheorSigma2.SigmaMult.Name" xml:space="preserve">
    <value>Width multiplier</value>
  </data>
  <data name="ExchangeTheorSigma2.SigmaMult.Description" xml:space="preserve">
    <value>Width multiplier</value>
  </data>
  <data name="ExchangeTheorSigma2.ShowNodes.Name" xml:space="preserve">
    <value>Show nodes</value>
  </data>
  <data name="ExchangeTheorSigma2.ShowNodes.Description" xml:space="preserve">
    <value>Nodes are shown when true</value>
  </data>
  <data name="ForwardTheorPx.Name" xml:space="preserve">
    <value>Forward Price</value>
  </data>
  <data name="ForwardTheorPx.Description" xml:space="preserve">
    <value>Base asset price calculated using theretical option prices</value>
  </data>
  <data name="GlobalHv.Name" xml:space="preserve">
    <value>Global HV</value>
  </data>
  <data name="GlobalHv.Description" xml:space="preserve">
    <value>This block takes precalculated HV from global cache.</value>
  </data>
  <data name="GlobalIvOnF.Name" xml:space="preserve">
    <value>Global IV ATM</value>
  </data>
  <data name="GlobalIvOnF.Description" xml:space="preserve">
    <value>This block takes precalculated IvOnF from global cache.</value>
  </data>
  <data name="GlobalIvOnF.ExpirationMode.Name" xml:space="preserve">
    <value>Search Mode</value>
  </data>
  <data name="GlobalIvOnF.ExpirationMode.Description" xml:space="preserve">
    <value>Algorythm to get expiration date</value>
  </data>
  <data name="GlobalIvOnF.Number.Name" xml:space="preserve">
    <value>Number</value>
  </data>
  <data name="GlobalIvOnF.Number.Description" xml:space="preserve">
    <value>Option series index (only alive). Parameter is used in mode ExpiryByNumber.</value>
  </data>
  <data name="GlobalIvOnF.ReturnPct.Name" xml:space="preserve">
    <value>Return Pct</value>
  </data>
  <data name="GlobalIvOnF.ReturnPct.Description" xml:space="preserve">
    <value>Return volatility as percents</value>
  </data>
  <data name="GlobalIvOnF.Expiry.Name" xml:space="preserve">
    <value>Expiry</value>
  </data>
  <data name="GlobalIvOnF.Expiry.Description" xml:space="preserve">
    <value>Expiration date (format yyyy-MM-dd)</value>
  </data>
  <data name="GlobalIvOnF.RepeatLastIv.Name" xml:space="preserve">
    <value>Repeat Last IV</value>
  </data>
  <data name="GlobalIvOnF.RepeatLastIv.Description" xml:space="preserve">
    <value>Handler should repeat last known value to avoid further logic errors</value>
  </data>
  <data name="GlobalIvOnF.RescaleTime.Name" xml:space="preserve">
    <value>Rescale Time</value>
  </data>
  <data name="GlobalIvOnF.RescaleTime.Description" xml:space="preserve">
    <value>Rescale time-to-expiry to our internal?</value>
  </data>
  <data name="GlobalIvOnF.DistanceMode.Name" xml:space="preserve">
    <value>Estimation Algo</value>
  </data>
  <data name="GlobalIvOnF.DistanceMode.Description" xml:space="preserve">
    <value>Algorythm to estimate time-to-expiry</value>
  </data>
  <data name="GlobalIvOnF.IgnoreCacheError.Name" xml:space="preserve">
    <value>Ignore cache error</value>
  </data>
  <data name="GlobalIvOnF.IgnoreCacheError.Description" xml:space="preserve">
    <value>Handler should ignore cache errors in agent mode</value>
  </data>
  <data name="GlobalSkewOnF.Name" xml:space="preserve">
    <value>Global Skew ATM</value>
  </data>
  <data name="GlobalSkewOnF.Description" xml:space="preserve">
    <value>This block takes precalculated skew at the money from global cache.</value>
  </data>
  <data name="GlobalSkewOnF.ExpirationMode.Name" xml:space="preserve">
    <value>Search mode</value>
  </data>
  <data name="GlobalSkewOnF.ExpirationMode.Description" xml:space="preserve">
    <value>Algorythm to get expiration date</value>
  </data>
  <data name="GlobalSkewOnF.Number.Name" xml:space="preserve">
    <value>Number</value>
  </data>
  <data name="GlobalSkewOnF.Number.Description" xml:space="preserve">
    <value>Option series index (only alive). Parameter is used in mode ExpiryByNumber.</value>
  </data>
  <data name="GlobalSkewOnF.Expiry.Name" xml:space="preserve">
    <value>Expiry</value>
  </data>
  <data name="GlobalSkewOnF.Expiry.Description" xml:space="preserve">
    <value>Expiration date (format yyyy-MM-dd)</value>
  </data>
  <data name="GlobalSkewOnF.RepeatLastSkew.Name" xml:space="preserve">
    <value>Repeat last skew</value>
  </data>
  <data name="GlobalSkewOnF.RepeatLastIv.Description" xml:space="preserve">
    <value>Handler should repeat last known value to avoid further logic errors</value>
  </data>
  <data name="GlobalSkewOnF.RescaleTime.Name" xml:space="preserve">
    <value>Rescale time</value>
  </data>
  <data name="GlobalSkewOnF.RescaleTime.Description" xml:space="preserve">
    <value>Rescale time-to-expiry to our internal?</value>
  </data>
  <data name="GlobalSkewOnF.DistanceMode.Name" xml:space="preserve">
    <value>Estimation algo</value>
  </data>
  <data name="GlobalSkewOnF.DistanceMode.Description" xml:space="preserve">
    <value>Algorythm to estimate time-to-expiry</value>
  </data>
  <data name="GlobalSkewOnF.IgnoreCacheError.Name" xml:space="preserve">
    <value>Ignore cache error</value>
  </data>
  <data name="GlobalSkewOnF.IgnoreCacheError.Description" xml:space="preserve">
    <value>Handler should ignore cache errors in agent mode</value>
  </data>
  <data name="HV.Name" xml:space="preserve">
    <value>HV (from book)</value>
  </data>
  <data name="HV.Description" xml:space="preserve">
    <value>Estimate HV with classic method</value>
  </data>
  <data name="IvOnF.Name" xml:space="preserve">
    <value>IV ATM</value>
  </data>
  <data name="IvOnF.Description" xml:space="preserve">
    <value>Implied Volatility at-the-money</value>
  </data>
  <data name="IvOnF.ReturnPct.Name" xml:space="preserve">
    <value>Return Pct</value>
  </data>
  <data name="IvOnF.ReturnPct.Description" xml:space="preserve">
    <value>Values are calculated as percents</value>
  </data>
  <data name="IvOnF.ShowNodes.Name" xml:space="preserve">
    <value>Show nodes</value>
  </data>
  <data name="IvOnF.ShowNodes.Description" xml:space="preserve">
    <value>Nodes are shown when true</value>
  </data>
  <data name="IvSmile.Name" xml:space="preserve">
    <value>IV Smile</value>
  </data>
  <data name="IvSmile.Description" xml:space="preserve">
    <value>Smile derived from option quotes (stream handler)</value>
  </data>
  <data name="IvSmile.ReturnPct.Name" xml:space="preserve">
    <value>Return Pct</value>
  </data>
  <data name="IvSmile.ReturnPct.Description" xml:space="preserve">
    <value>Values are calculated as percents</value>
  </data>
  <data name="IvSmile.ShowNodes.Name" xml:space="preserve">
    <value>Show nodes</value>
  </data>
  <data name="IvSmile.ShowNodes.Description" xml:space="preserve">
    <value>Nodes are shown when true</value>
  </data>
  <data name="NumericalDeltaOnF2.Name" xml:space="preserve">
    <value>Numerical Delta ATM v2</value>
  </data>
  <data name="NumericalDeltaOnF2.Description" xml:space="preserve">
    <value>Numerical estimate of delta at-the-money (only one point is processed; stream handler)</value>
  </data>
  <data name="OpenVirtualFutPosition.Name" xml:space="preserve">
    <value>Open Virtual Pos</value>
  </data>
  <data name="OpenVirtualFutPosition.Description" xml:space="preserve">
    <value>Open virtual position in base asset (stream handler)</value>
  </data>
  <data name="OpenVirtualOptPosition.Name" xml:space="preserve">
    <value>Open Virtual Opt Pos</value>
  </data>
  <data name="OpenVirtualOptPosition.Description" xml:space="preserve">
    <value>Open virtual position in option (stream handler)</value>
  </data>
  <data name="OptionBase.Name" xml:space="preserve">
    <value>Base asset</value>
  </data>
  <data name="OptionBase.Description" xml:space="preserve">
    <value>Base asset (stream handler)</value>
  </data>
  <data name="OptionsBoardNumericalDelta.Name" xml:space="preserve">
    <value>Options board numerical delta</value>
  </data>
  <data name="OptionsBoardNumericalDelta.Description" xml:space="preserve">
    <value>Estimate delta as function of strikes with numerical differentiation</value>
  </data>
  <data name="OptionSelector.Name" xml:space="preserve">
    <value>Option Selector</value>
  </data>
  <data name="OptionSelector.Description" xml:space="preserve">
    <value>Choose one of several option sources</value>
  </data>
  <data name="OptionSeriesByNumber.Name" xml:space="preserve">
    <value>Option Series by Number</value>
  </data>
  <data name="OptionSeriesByNumber.Description" xml:space="preserve">
    <value>Handler to get option series by its index. Series are sorted ascending from near (index 1) to further. It's stream handler.</value>
  </data>
  <data name="OptionStrikeCount.Name" xml:space="preserve">
    <value>Count Options</value>
  </data>
  <data name="OptionStrikeCount.Description" xml:space="preserve">
    <value>Number of options in the source</value>
  </data>
  <data name="SingleOption.Name" xml:space="preserve">
    <value>Single Option</value>
  </data>
  <data name="SingleOption.Description" xml:space="preserve">
    <value>Get single option from its option series</value>
  </data>
  <data name="SingleOption.FixedStrike.Name" xml:space="preserve">
    <value>Strike</value>
  </data>
  <data name="SingleOption.FixedStrike.Description" xml:space="preserve">
    <value>Option strike</value>
  </data>
  <data name="SingleOption.OptionType.Name" xml:space="preserve">
    <value>Option Type</value>
  </data>
  <data name="SingleOption.OptionType.Description" xml:space="preserve">
    <value>Option type (parameter Any is not recommended)</value>
  </data>
  <data name="SingleOption.SelectionMode.Name" xml:space="preserve">
    <value>Search Algo</value>
  </data>
  <data name="SingleOption.SelectionMode.Description" xml:space="preserve">
    <value>Search algorythm</value>
  </data>
  <data name="SingleOption2.Name" xml:space="preserve">
    <value>Single Option</value>
  </data>
  <data name="SingleOption2.Description" xml:space="preserve">
    <value>Get single option from its option series</value>
  </data>
  <data name="SingleOption2.FixedStrike.Name" xml:space="preserve">
    <value>Strike</value>
  </data>
  <data name="SingleOption2.FixedStrike.Description" xml:space="preserve">
    <value>Option strike</value>
  </data>
  <data name="SingleOption2.OptionType.Name" xml:space="preserve">
    <value>Option Type</value>
  </data>
  <data name="SingleOption2.OptionType.Description" xml:space="preserve">
    <value>Option type (parameter Any is not recommended)</value>
  </data>
  <data name="SingleOption2.SelectionMode.Name" xml:space="preserve">
    <value>Search Algo</value>
  </data>
  <data name="SingleOption2.SelectionMode.Description" xml:space="preserve">
    <value>Search algorythm</value>
  </data>
  <data name="TimeToExpiry.Name" xml:space="preserve">
    <value>Time to expiry</value>
  </data>
  <data name="TimeToExpiry.Description" xml:space="preserve">
    <value>Time to expiry in year fractions. Various algorithms are applied (fixed time, plain calendar time, plain calendar time including days off and so on).</value>
  </data>
  <data name="VerticalLine.Name" xml:space="preserve">
    <value>Vertical Line</value>
  </data>
  <data name="VerticalLine.Description" xml:space="preserve">
    <value>Vertical line for CanvasPane (no interaction with user)</value>
  </data>
  <data name="AutoHedger.DownDelta.Name" xml:space="preserve">
    <value>Down Delta</value>
  </data>
  <data name="AutoHedger.UpDelta.Name" xml:space="preserve">
    <value>Up Delta</value>
  </data>
  <data name="AutoHedger.TargetDelta.Name" xml:space="preserve">
    <value>Target Delta</value>
  </data>
  <data name="BasePx2.Name" xml:space="preserve">
    <value>Base Price</value>
  </data>
  <data name="BasePx2.Description" xml:space="preserve">
    <value>Base asset price. Different algorythms are available (fixed price, last trade, quote midpoint, etc). Bar handler.</value>
  </data>
  <data name="BasePx2.PxMode.Name" xml:space="preserve">
    <value>Algorythm</value>
  </data>
  <data name="BasePx2.PxMode.Description" xml:space="preserve">
    <value>Algorythm to get base asset's price (FixedPx, LastTrade, etc)</value>
  </data>
  <data name="BasePx2.DisplayUnits.Name" xml:space="preserve">
    <value>Display Units</value>
  </data>
  <data name="BasePx2.DisplayUnits.Description" xml:space="preserve">
    <value>Display units (hundreds, thousands, as is)</value>
  </data>
  <data name="BasePx2.FixedPx.Name" xml:space="preserve">
    <value>Price</value>
  </data>
  <data name="BasePx2.FixedPx.Description" xml:space="preserve">
    <value>Price for algorythm FixedPx</value>
  </data>
  <data name="BasePx2.DisplayPrice.Name" xml:space="preserve">
    <value>Display Price</value>
  </data>
  <data name="BasePx2.DisplayPrice.Description" xml:space="preserve">
    <value>Base asset price (only to display at UI)</value>
  </data>
  <data name="BestChartTrading.Name" xml:space="preserve">
    <value>Best Chart Trading</value>
  </data>
  <data name="BestChartTrading.Description" xml:space="preserve">
    <value>Trading with mouse on CanvasPane. Best quotes are accented automatically</value>
  </data>
  <data name="BestChartTrading.OptionType.Name" xml:space="preserve">
    <value>Option Type</value>
  </data>
  <data name="BestChartTrading.OptionType.Description" xml:space="preserve">
    <value>Option type (when Any, the handler will choose the best quote)</value>
  </data>
  <data name="BestChartTrading.Qty.Name" xml:space="preserve">
    <value>Size</value>
  </data>
  <data name="BestChartTrading.Qty.Description" xml:space="preserve">
    <value>Trade quantity. Negative value reverts the signal.</value>
  </data>
  <data name="BestChartTrading.OptPxMode.Name" xml:space="preserve">
    <value>Quote Type</value>
  </data>
  <data name="BestChartTrading.OptPxMode.Description" xml:space="preserve">
    <value>Quote type (ask or bid)</value>
  </data>
  <data name="BestChartTrading.WidthPx.Name" xml:space="preserve">
    <value>Width</value>
  </data>
  <data name="BestChartTrading.WidthPx.Description" xml:space="preserve">
    <value>Width of neutral band (price steps)</value>
  </data>
  <data name="BestChartTrading.OutletDistance.Name" xml:space="preserve">
    <value>Outlet distance</value>
  </data>
  <data name="BestChartTrading.OutletDistance.Description" xml:space="preserve">
    <value>Outlet distance to 'profitable' market order (units of volatility)</value>
  </data>
  <data name="BestChartTrading.OutletSize.Name" xml:space="preserve">
    <value>Outlet size</value>
  </data>
  <data name="BestChartTrading.OutletSize.Description" xml:space="preserve">
    <value>Outlet size (pixel)</value>
  </data>
  <data name="BlackScholesConstSmile2.Name" xml:space="preserve">
    <value>Black-Scholes Const</value>
  </data>
  <data name="BlackScholesConstSmile2.Description" xml:space="preserve">
    <value>A flat smile as in the Black-Scholes option model. Volatility is a constant and is defined by the 'Sigma, %' parameter.</value>
  </data>
  <data name="BlackScholesConstSmile2.Label.Name" xml:space="preserve">
    <value>Label</value>
  </data>
  <data name="BlackScholesConstSmile2.Label.Description" xml:space="preserve">
    <value>Label to mark a nodes</value>
  </data>
  <data name="BlackScholesConstSmile2.ReturnPct.Name" xml:space="preserve">
    <value>Return Pct</value>
  </data>
  <data name="BlackScholesConstSmile2.ReturnPct.Description" xml:space="preserve">
    <value>Values are calculated as percents</value>
  </data>
  <data name="BlackScholesConstSmile2.ShowNodes.Name" xml:space="preserve">
    <value>Show nodes</value>
  </data>
  <data name="BlackScholesConstSmile2.ShowNodes.Description" xml:space="preserve">
    <value>Nodes are shown when true</value>
  </data>
  <data name="BlackScholesDelta.Name" xml:space="preserve">
    <value>Single Series Delta (book)</value>
  </data>
  <data name="BlackScholesDelta.Description" xml:space="preserve">
    <value>Straigtforward calculation of delta (as in books)</value>
  </data>
  <data name="BlackScholesDelta.ReturnPct.Name" xml:space="preserve">
    <value>Return Pct</value>
  </data>
  <data name="BlackScholesDelta.ReturnPct.Description" xml:space="preserve">
    <value>Values are calculated as percents</value>
  </data>
  <data name="BlackScholesDelta.ShowNodes.Name" xml:space="preserve">
    <value>Show nodes</value>
  </data>
  <data name="BlackScholesDelta.ShowNodes.Description" xml:space="preserve">
    <value>Nodes are shown when true</value>
  </data>
  <data name="BlackScholesGreeks.Name" xml:space="preserve">
    <value>Single Series Greeks (book)</value>
  </data>
  <data name="BlackScholesGreeks.Description" xml:space="preserve">
    <value>Straigtforward calculation of greeks (as in books)</value>
  </data>
  <data name="BlackScholesGreeks.ReturnPct.Name" xml:space="preserve">
    <value>Return Pct</value>
  </data>
  <data name="BlackScholesGreeks.ReturnPct.Description" xml:space="preserve">
    <value>Values are calculated as percents</value>
  </data>
  <data name="BlackScholesGreeks.ShowNodes.Name" xml:space="preserve">
    <value>Show nodes</value>
  </data>
  <data name="BlackScholesGreeks.ShowNodes.Description" xml:space="preserve">
    <value>Nodes are shown when true</value>
  </data>
  <data name="BlackScholesSmile2.Name" xml:space="preserve">
    <value>Black-Scholes 'Smile'</value>
  </data>
  <data name="BlackScholesSmile2.Description" xml:space="preserve">
    <value>Horizontal line spanning a few Sigma</value>
  </data>
  <data name="BlackScholesSmile2.Label.Name" xml:space="preserve">
    <value>Label</value>
  </data>
  <data name="BlackScholesSmile2.Label.Description" xml:space="preserve">
    <value>Label to mark a nodes</value>
  </data>
  <data name="BlackScholesSmile2.SigmaMult.Name" xml:space="preserve">
    <value>Width multiplier</value>
  </data>
  <data name="BlackScholesSmile2.SigmaMult.Description" xml:space="preserve">
    <value>Width multiplier</value>
  </data>
  <data name="BlackScholesSmile2.ShowNodes.Name" xml:space="preserve">
    <value>Show nodes</value>
  </data>
  <data name="BlackScholesSmile2.ShowNodes.Description" xml:space="preserve">
    <value>Nodes are shown when true</value>
  </data>
  <data name="BuyOptions.Name" xml:space="preserve">
    <value>Buy Options</value>
  </data>
  <data name="BuyOptions.Description" xml:space="preserve">
    <value>Buy options while position risk is 'small'</value>
  </data>
  <data name="BuyOptionGroup.Name" xml:space="preserve">
    <value>Buy option group</value>
  </data>
  <data name="BuyOptionGroup.Description" xml:space="preserve">
    <value>Buy many options while position risk is 'small'</value>
  </data>
  <data name="BuyOptionGroupDelta.Name" xml:space="preserve">
    <value>Buy option group (delta range)</value>
  </data>
  <data name="BuyOptionGroupDelta.Description" xml:space="preserve">
    <value>Buy many options while position risk is 'small' (strike range is set in units of delta)</value>
  </data>
  <data name="MarketMakerDelta.Name" xml:space="preserve">
    <value>Market maker (delta range)</value>
  </data>
  <data name="MarketMakerDelta.Description" xml:space="preserve">
    <value>Buy and sell options while position risk is 'small' (strike range is set in units of delta)</value>
  </data>
  <data name="ChartTrading.Name" xml:space="preserve">
    <value>Chart Trading</value>
  </data>
  <data name="ChartTrading.Description" xml:space="preserve">
    <value>Trading with mouse on CanvasPane</value>
  </data>
  <data name="CloseVirtualPosition.Name" xml:space="preserve">
    <value>Close Virtual Pos (bar)</value>
  </data>
  <data name="CloseVirtualPosition.Description" xml:space="preserve">
    <value>Close virtual position (bar handler)</value>
  </data>
  <data name="CombinePositionProfiles.Name" xml:space="preserve">
    <value>Combine Series Profiles</value>
  </data>
  <data name="CombinePositionProfiles.Description" xml:space="preserve">
    <value>Add 2 position profiles</value>
  </data>
  <data name="CurrentFutPx.Name" xml:space="preserve">
    <value>Current Fut Px</value>
  </data>
  <data name="CurrentFutPx.Description" xml:space="preserve">
    <value>Draws a vertical line in the chart. A vertical position is connected to any given Interactive Series.</value>
  </data>
  <data name="DropVirtualPositions.Name" xml:space="preserve">
    <value>Clear Virtual Positions</value>
  </data>
  <data name="DropVirtualPositions.Description" xml:space="preserve">
    <value>This block allows you to delete virtual positions. Connect Delete positions property to Control Pane and create a button.</value>
  </data>
  <data name="EditTemplateSmile.Name" xml:space="preserve">
    <value>Edit Template Smile</value>
  </data>
  <data name="EditTemplateSmile.Description" xml:space="preserve">
    <value>Edit template smile</value>
  </data>
  <data name="EditTemplateSmile.SigmaMult.Name" xml:space="preserve">
    <value>Width multiplier</value>
  </data>
  <data name="EditTemplateSmile.SigmaMult.Description" xml:space="preserve">
    <value>Width multiplier</value>
  </data>
  <data name="EditTemplateSmile.ShowNodes.Name" xml:space="preserve">
    <value>Show nodes</value>
  </data>
  <data name="EditTemplateSmile.ShowNodes.Description" xml:space="preserve">
    <value>Nodes are shown when true</value>
  </data>
  <data name="ExchangeTheorSigma3.Name" xml:space="preserve">
    <value>Exchange Smile</value>
  </data>
  <data name="ExchangeTheorSigma3.Description" xml:space="preserve">
    <value>Exchange smile (bar handler)</value>
  </data>
  <data name="ExchangeTheorSigma3.SigmaMult.Name" xml:space="preserve">
    <value>Width multiplier</value>
  </data>
  <data name="ExchangeTheorSigma3.SigmaMult.Description" xml:space="preserve">
    <value>Width multiplier</value>
  </data>
  <data name="ExchangeTheorSigma3.ShowNodes.Name" xml:space="preserve">
    <value>Show nodes</value>
  </data>
  <data name="ExchangeTheorSigma3.ShowNodes.Description" xml:space="preserve">
    <value>Nodes are shown when true</value>
  </data>
  <data name="ExchangeTheorSigma5.Name" xml:space="preserve">
    <value>Exchange Smile (Rescaled)</value>
  </data>
  <data name="ExchangeTheorSigma5.Description" xml:space="preserve">
    <value>Exchange smile rescaled to our internal time-to-expiry</value>
  </data>
  <data name="ExchangeTheorSigma5.SigmaMult.Name" xml:space="preserve">
    <value>Width multiplier</value>
  </data>
  <data name="ExchangeTheorSigma5.SigmaMult.Description" xml:space="preserve">
    <value>Width multiplier</value>
  </data>
  <data name="ExchangeTheorSigma5.ShowNodes.Name" xml:space="preserve">
    <value>Show nodes</value>
  </data>
  <data name="ExchangeTheorSigma5.ShowNodes.Description" xml:space="preserve">
    <value>Nodes are shown when true</value>
  </data>
  <data name="FixedValue.Name" xml:space="preserve">
    <value>Fixed Value</value>
  </data>
  <data name="FixedValue.Description" xml:space="preserve">
    <value>Fixed value</value>
  </data>
  <data name="GaussSmile.Name" xml:space="preserve">
    <value>Gauss 'Smile'</value>
  </data>
  <data name="GaussSmile.Description" xml:space="preserve">
    <value>Arbitrary function with 3 parameters similar to observed smile</value>
  </data>
  <data name="GaussSmile.ReturnPct.Name" xml:space="preserve">
    <value>Return Pct</value>
  </data>
  <data name="GaussSmile.ReturnPct.Description" xml:space="preserve">
    <value>Values are calculated as percents</value>
  </data>
  <data name="GaussSmile.ShowNodes.Name" xml:space="preserve">
    <value>Show nodes</value>
  </data>
  <data name="GaussSmile.ShowNodes.Description" xml:space="preserve">
    <value>Nodes are shown when true</value>
  </data>
  <data name="IvSmile2.Name" xml:space="preserve">
    <value>IV Smile</value>
  </data>
  <data name="IvSmile2.Description" xml:space="preserve">
    <value>Smile derived from option quotes (bar handler)</value>
  </data>
  <data name="IvSmile2.ReturnPct.Name" xml:space="preserve">
    <value>Return Pct</value>
  </data>
  <data name="IvSmile2.ReturnPct.Description" xml:space="preserve">
    <value>Values are calculated as percents</value>
  </data>
  <data name="IvSmile2.ShowNodes.Name" xml:space="preserve">
    <value>Show nodes</value>
  </data>
  <data name="IvSmile2.ShowNodes.Description" xml:space="preserve">
    <value>Nodes are shown when true</value>
  </data>
  <data name="IvSmile2.MinStrike.Name" xml:space="preserve">
    <value>Min strike</value>
  </data>
  <data name="IvSmile2.MinStrike.Description" xml:space="preserve">
    <value>Min strike to be processed by handler</value>
  </data>
  <data name="IvSmile2.MaxStrike.Name" xml:space="preserve">
    <value>Max strike</value>
  </data>
  <data name="IvSmile2.MaxStrike.Description" xml:space="preserve">
    <value>Max strike to be processed by handler</value>
  </data>
  <data name="IvSmile2.StrikeStep.Name" xml:space="preserve">
    <value>Strike step</value>
  </data>
  <data name="IvSmile2.StrikeStep.Description" xml:space="preserve">
    <value>Strike step</value>
  </data>
  <data name="IvSmileRescaled2.Name" xml:space="preserve">
    <value>IV Smile (Deribit)</value>
  </data>
  <data name="IvSmileRescaled2.Description" xml:space="preserve">
    <value>Smile derived from option quotes with scale multiplier (bar handler, for Deribit)</value>
  </data>
  <data name="IvSmileRescaled2.ReturnPct.Name" xml:space="preserve">
    <value>Return Pct</value>
  </data>
  <data name="IvSmileRescaled2.ReturnPct.Description" xml:space="preserve">
    <value>Values are calculated as percents</value>
  </data>
  <data name="IvSmileRescaled2.ShowNodes.Name" xml:space="preserve">
    <value>Show nodes</value>
  </data>
  <data name="IvSmileRescaled2.ShowNodes.Description" xml:space="preserve">
    <value>Nodes are shown when true</value>
  </data>
  <data name="IvSmileRescaled2.MinStrike.Name" xml:space="preserve">
    <value>Min strike</value>
  </data>
  <data name="IvSmileRescaled2.MinStrike.Description" xml:space="preserve">
    <value>Min strike to be processed by handler</value>
  </data>
  <data name="IvSmileRescaled2.MaxStrike.Name" xml:space="preserve">
    <value>Max strike</value>
  </data>
  <data name="IvSmileRescaled2.MaxStrike.Description" xml:space="preserve">
    <value>Max strike to be processed by handler</value>
  </data>
  <data name="IvSmileRescaled2.StrikeStep.Name" xml:space="preserve">
    <value>Strike step</value>
  </data>
  <data name="IvSmileRescaled2.StrikeStep.Description" xml:space="preserve">
    <value>Strike step</value>
  </data>
  <data name="LinearTransform.Name" xml:space="preserve">
    <value>Linear transform (a*x+b)</value>
  </data>
  <data name="LinearTransform.Description" xml:space="preserve">
    <value>Linear transform (a*x+b)</value>
  </data>
  <data name="NumericalDeltaOnF.Name" xml:space="preserve">
    <value>Numerical Delta ATM</value>
  </data>
  <data name="NumericalDeltaOnF.Description" xml:space="preserve">
    <value>Numerical estimate of delta at-the-money (only one point is processed; bar handler)</value>
  </data>
  <data name="NumericalDeltaOnF3.Name" xml:space="preserve">
    <value>Numerical Delta ATM (IntSer)</value>
  </data>
  <data name="NumericalDeltaOnF3.Description" xml:space="preserve">
    <value>Numerical estimate of delta at-the-money (only one point is processed using delta profile)</value>
  </data>
  <data name="NumericalGammaOnF.Name" xml:space="preserve">
    <value>Numerical Gamma ATM</value>
  </data>
  <data name="NumericalGammaOnF.Description" xml:space="preserve">
    <value>Numerical estimate of gamma at-the-money (only one point is processed; bar handler)</value>
  </data>
  <data name="NumericalGammaOnF3.Name" xml:space="preserve">
    <value>Numerical Gamma ATM (IntSer)</value>
  </data>
  <data name="NumericalGammaOnF3.Description" xml:space="preserve">
    <value>Numerical estimate of gamma at-the-money (only one point is processed using gamma profile)</value>
  </data>
  <data name="NumericalThetaOnF.Name" xml:space="preserve">
    <value>Numerical Theta ATM</value>
  </data>
  <data name="NumericalThetaOnF.Description" xml:space="preserve">
    <value>Numerical estimate of theta at-the-money (only one point is processed)</value>
  </data>
  <data name="NumericalVegaOnF.Name" xml:space="preserve">
    <value>Numerical Vega ATM</value>
  </data>
  <data name="NumericalVegaOnF.Description" xml:space="preserve">
    <value>Numerical estimate of vega at-the-money (only one point is processed)</value>
  </data>
  <data name="NumericalVegaOnF.SigmaStep.Name" xml:space="preserve">
    <value>Sigma step</value>
  </data>
  <data name="NumericalVegaOnF.SigmaStep.Description" xml:space="preserve">
    <value>Sigma step for numerical derivative</value>
  </data>
  <data name="NumericalVegaOnF.GreekAlgo.Name" xml:space="preserve">
    <value>Greek algo</value>
  </data>
  <data name="NumericalVegaOnF.GreekAlgo.Description" xml:space="preserve">
    <value>FrozenSmile - smile is frozen; ShiftingSmile - smile shifts horizontally without modification</value>
  </data>
  <data name="NumericalVegaOnF.Vega.Name" xml:space="preserve">
    <value>Vega</value>
  </data>
  <data name="NumericalVegaOnF.Vega.Description" xml:space="preserve">
    <value>Current vega (just to show it on ControlPane)</value>
  </data>
  <data name="NumericalVommaOnF.Name" xml:space="preserve">
    <value>Numerical Vomma ATM</value>
  </data>
  <data name="NumericalVommaOnF.Description" xml:space="preserve">
    <value>Numerical estimate of vomma at-the-money (only one point is processed)</value>
  </data>
  <data name="NumericalVommaOnF.SigmaStep.Name" xml:space="preserve">
    <value>Sigma step</value>
  </data>
  <data name="NumericalVommaOnF.SigmaStep.Description" xml:space="preserve">
    <value>Sigma step for numerical derivative</value>
  </data>
  <data name="NumericalVommaOnF.GreekAlgo.Name" xml:space="preserve">
    <value>Greek algo</value>
  </data>
  <data name="NumericalVommaOnF.GreekAlgo.Description" xml:space="preserve">
    <value>FrozenSmile - smile is frozen; ShiftingSmile - smile shifts horizontally without modification</value>
  </data>
  <data name="NumericalVommaOnF.Vomma.Name" xml:space="preserve">
    <value>Vomma</value>
  </data>
  <data name="NumericalVommaOnF.Vomma.Description" xml:space="preserve">
    <value>Current vomma (just to show it on ControlPane)</value>
  </data>
  <data name="OpenVirtualFutPosition2.Name" xml:space="preserve">
    <value>Open Virtual Fut Pos (bar)</value>
  </data>
  <data name="OpenVirtualFutPosition2.Description" xml:space="preserve">
    <value>Open virtual position in base asset (bar handler)</value>
  </data>
  <data name="OpenVirtualOptPosition2.Name" xml:space="preserve">
    <value>Open Virtual Opt Pos (bar)</value>
  </data>
  <data name="OpenVirtualOptPosition2.Description" xml:space="preserve">
    <value>Open virtual position in options (bar handler)</value>
  </data>
  <data name="OptionBase2.Name" xml:space="preserve">
    <value>Base asset</value>
  </data>
  <data name="OptionBase2.Description" xml:space="preserve">
    <value>Base asset (bar handler)</value>
  </data>
  <data name="OptionSeriesByNumber2.Name" xml:space="preserve">
    <value>Option Series by Number</value>
  </data>
  <data name="OptionSeriesByNumber2.Description" xml:space="preserve">
    <value>Handler to get option series by its index. Series are sorted ascending from near (index 1) to further. It's bar handler.</value>
  </data>
  <data name="OwnOrders.Name" xml:space="preserve">
    <value>Own orders</value>
  </data>
  <data name="OwnOrders.Description" xml:space="preserve">
    <value>Own active orders</value>
  </data>
  <data name="OwnOrders.ReturnPct.Name" xml:space="preserve">
    <value>Return Pct</value>
  </data>
  <data name="OwnOrders.ReturnPct.Description" xml:space="preserve">
    <value>Values are calculated as percents</value>
  </data>
  <data name="OwnOrders.ShowNodes.Name" xml:space="preserve">
    <value>Show Nodes</value>
  </data>
  <data name="OwnOrders.ShowNodes.Description" xml:space="preserve">
    <value>Nodes are shown when true</value>
  </data>
  <data name="OwnOrders.MinStrike.Name" xml:space="preserve">
    <value>Min Strike</value>
  </data>
  <data name="OwnOrders.MinStrike.Description" xml:space="preserve">
    <value>Min strike to be processed by handler</value>
  </data>
  <data name="OwnOrders.MaxStrike.Name" xml:space="preserve">
    <value>Max Strike</value>
  </data>
  <data name="OwnOrders.MaxStrike.Description" xml:space="preserve">
    <value>Max strike to be processed by handler</value>
  </data>
  <data name="OwnOrders.StrikeStep.Name" xml:space="preserve">
    <value>Strike Step</value>
  </data>
  <data name="OwnOrders.StrikeStep.Description" xml:space="preserve">
    <value>Strike step</value>
  </data>
  <data name="OwnOrders.TooltipFormat.Name" xml:space="preserve">
    <value>Tooltip Format</value>
  </data>
  <data name="OwnOrders.TooltipFormat.Description" xml:space="preserve">
    <value>Tooltip format (i.e. '0.00', '0.0##' etc)</value>
  </data>
  <data name="OwnPositionIv.Name" xml:space="preserve">
    <value>Own position IV (num)</value>
  </data>
  <data name="OwnPositionIv.Description" xml:space="preserve">
    <value>Own position IV (effective volatility that makes current profit to become zero)</value>
  </data>
  <data name="OwnPositionIv.ShowLongPositions.Name" xml:space="preserve">
    <value>Show long</value>
  </data>
  <data name="OwnPositionIv.ShowLongPositions.Description" xml:space="preserve">
    <value>Show long or short positions</value>
  </data>
  <data name="OwnPositionIv.DisplayUnits.Name" xml:space="preserve">
    <value>Display units</value>
  </data>
  <data name="OwnPositionIv.DisplayUnits.Description" xml:space="preserve">
    <value>Display units (hundreds, thousands, as is)</value>
  </data>
  <data name="OwnPositionIvLine.Name" xml:space="preserve">
    <value>Own position IV (line)</value>
  </data>
  <data name="OwnPositionIvLine.Description" xml:space="preserve">
    <value>Own position IV (effective volatility that makes current profit to become zero)</value>
  </data>
  <data name="OwnPositionIvLine.ShowLongPositions.Name" xml:space="preserve">
    <value>Show long</value>
  </data>
  <data name="OwnPositionIvLine.ShowLongPositions.Description" xml:space="preserve">
    <value>Show long or short positions</value>
  </data>
  <data name="OwnPositionIvLine.DisplayUnits.Name" xml:space="preserve">
    <value>Display units</value>
  </data>
  <data name="OwnPositionIvLine.DisplayUnits.Description" xml:space="preserve">
    <value>Display units (hundreds, thousands, as is)</value>
  </data>
  <data name="SellOptions.Name" xml:space="preserve">
    <value>Sell Options</value>
  </data>
  <data name="SellOptions.Description" xml:space="preserve">
    <value>Sell options while position risk is 'small'</value>
  </data>
  <data name="SellOptionGroup.Name" xml:space="preserve">
    <value>Sell option group</value>
  </data>
  <data name="SellOptionGroup.Description" xml:space="preserve">
    <value>Sell many options while position risk is 'small'</value>
  </data>
  <data name="SellOptionGroupDelta.Name" xml:space="preserve">
    <value>Sell option group (delta range)</value>
  </data>
  <data name="SellOptionGroupDelta.Description" xml:space="preserve">
    <value>Sell many options while position risk is 'small' (strike range is set in units of delta)</value>
  </data>
  <data name="SetViewport.Name" xml:space="preserve">
    <value>Set Viewport</value>
  </data>
  <data name="SetViewport.Description" xml:space="preserve">
    <value>Configure chart visible region: ranges of axes, grid step, etc.</value>
  </data>
  <data name="SetViewport.SigmaMult.Name" xml:space="preserve">
    <value>Width multiplier</value>
  </data>
  <data name="SetViewport.SigmaMult.Description" xml:space="preserve">
    <value>Width multiplier</value>
  </data>
  <data name="SetViewport.ShowNodes.Name" xml:space="preserve">
    <value>Show nodes</value>
  </data>
  <data name="SetViewport.ShowNodes.Description" xml:space="preserve">
    <value>Nodes are shown when true</value>
  </data>
  <data name="SingleSeriesNumericalDelta.Name" xml:space="preserve">
    <value>Single Series Numerical Delta</value>
  </data>
  <data name="SingleSeriesNumericalDelta.Description" xml:space="preserve">
    <value>Estimates a delta profile with numerical differentiation (build a delta profile)</value>
  </data>
  <data name="SingleSeriesNumericalDelta.ReturnPct.Name" xml:space="preserve">
    <value>Return Pct</value>
  </data>
  <data name="SingleSeriesNumericalDelta.ReturnPct.Description" xml:space="preserve">
    <value>Values are calculated as percents</value>
  </data>
  <data name="SingleSeriesNumericalDelta.ShowNodes.Name" xml:space="preserve">
    <value>Show nodes</value>
  </data>
  <data name="SingleSeriesNumericalDelta.ShowNodes.Description" xml:space="preserve">
    <value>Nodes are shown when true</value>
  </data>
  <data name="SingleSeriesNumericalDelta3.Name" xml:space="preserve">
    <value>Numerical Delta (IntSer)</value>
  </data>
  <data name="SingleSeriesNumericalDelta3.Description" xml:space="preserve">
    <value>Estimates a delta using a position profile</value>
  </data>
  <data name="SingleSeriesNumericalDelta3.ReturnPct.Name" xml:space="preserve">
    <value>Return Pct</value>
  </data>
  <data name="SingleSeriesNumericalDelta3.ReturnPct.Description" xml:space="preserve">
    <value>Values are calculated as percents</value>
  </data>
  <data name="SingleSeriesNumericalDelta3.ShowNodes.Name" xml:space="preserve">
    <value>Show nodes</value>
  </data>
  <data name="SingleSeriesNumericalDelta3.ShowNodes.Description" xml:space="preserve">
    <value>Nodes are shown when true</value>
  </data>
  <data name="SingleSeriesNumericalGamma.Name" xml:space="preserve">
    <value>Single Series Numerical Gamma</value>
  </data>
  <data name="SingleSeriesNumericalGamma.Description" xml:space="preserve">
    <value>Estimates a gamma profile with numerical differentiation</value>
  </data>
  <data name="SingleSeriesNumericalGamma.ReturnPct.Name" xml:space="preserve">
    <value>Return Pct</value>
  </data>
  <data name="SingleSeriesNumericalGamma.ReturnPct.Description" xml:space="preserve">
    <value>Values are calculated as percents</value>
  </data>
  <data name="SingleSeriesNumericalGamma.ShowNodes.Name" xml:space="preserve">
    <value>Show nodes</value>
  </data>
  <data name="SingleSeriesNumericalGamma.ShowNodes.Description" xml:space="preserve">
    <value>Nodes are shown when true</value>
  </data>
  <data name="SingleSeriesNumericalGamma3.Name" xml:space="preserve">
    <value>Numerical Gamma (IntSer)</value>
  </data>
  <data name="SingleSeriesNumericalGamma3.Description" xml:space="preserve">
    <value>Estimates a gamma position using its delta profile</value>
  </data>
  <data name="SingleSeriesNumericalGamma3.ReturnPct.Name" xml:space="preserve">
    <value>Return Pct</value>
  </data>
  <data name="SingleSeriesNumericalGamma3.ReturnPct.Description" xml:space="preserve">
    <value>Values are calculated as percents</value>
  </data>
  <data name="SingleSeriesNumericalGamma3.ShowNodes.Name" xml:space="preserve">
    <value>Show nodes</value>
  </data>
  <data name="SingleSeriesNumericalGamma3.ShowNodes.Description" xml:space="preserve">
    <value>Nodes are shown when true</value>
  </data>
  <data name="SingleSeriesNumericalTheta.Name" xml:space="preserve">
    <value>Single Series Numerical Theta</value>
  </data>
  <data name="SingleSeriesNumericalTheta.Description" xml:space="preserve">
    <value>Estimates a theta profile with numerical differentiation (build a theta profile)</value>
  </data>
  <data name="SingleSeriesNumericalTheta.ReturnPct.Name" xml:space="preserve">
    <value>Return Pct</value>
  </data>
  <data name="SingleSeriesNumericalTheta.ReturnPct.Description" xml:space="preserve">
    <value>Values are calculated as percents</value>
  </data>
  <data name="SingleSeriesNumericalTheta.ShowNodes.Name" xml:space="preserve">
    <value>Show nodes</value>
  </data>
  <data name="SingleSeriesNumericalTheta.ShowNodes.Description" xml:space="preserve">
    <value>Nodes are shown when true</value>
  </data>
  <data name="SingleSeriesNumericalVega.Name" xml:space="preserve">
    <value>Single Series Numerical Vega</value>
  </data>
  <data name="SingleSeriesNumericalVega.Description" xml:space="preserve">
    <value>Estimates a vega profile with numerical differentiation (build a vega profile)</value>
  </data>
  <data name="SingleSeriesNumericalVega.ReturnPct.Name" xml:space="preserve">
    <value>Return Pct</value>
  </data>
  <data name="SingleSeriesNumericalVega.ReturnPct.Description" xml:space="preserve">
    <value>Values are calculated as percents</value>
  </data>
  <data name="SingleSeriesNumericalVega.ShowNodes.Name" xml:space="preserve">
    <value>Show nodes</value>
  </data>
  <data name="SingleSeriesNumericalVega.ShowNodes.Description" xml:space="preserve">
    <value>Nodes are shown when true</value>
  </data>
  <data name="SingleSeriesPositionGrid.Name" xml:space="preserve">
    <value>Single Series Position Grid</value>
  </data>
  <data name="SingleSeriesPositionGrid.Description" xml:space="preserve">
    <value>Grid of entire option position (count semistraddles)</value>
  </data>
  <data name="SingleSeriesPositionGrid.SigmaMult.Name" xml:space="preserve">
    <value>Width multiplier</value>
  </data>
  <data name="SingleSeriesPositionGrid.SigmaMult.Description" xml:space="preserve">
    <value>Width multiplier</value>
  </data>
  <data name="SingleSeriesPositionGrid.ShowNodes.Name" xml:space="preserve">
    <value>Show nodes</value>
  </data>
  <data name="SingleSeriesPositionGrid.ShowNodes.Description" xml:space="preserve">
    <value>Nodes are shown when true</value>
  </data>
  <data name="SingleSeriesPositionList.Name" xml:space="preserve">
    <value>Single Series Position List</value>
  </data>
  <data name="SingleSeriesPositionList.Description" xml:space="preserve">
    <value>A list of all user's trades in one option series</value>
  </data>
  <data name="SingleSeriesPositionList.SigmaMult.Name" xml:space="preserve">
    <value>Width multiplier</value>
  </data>
  <data name="SingleSeriesPositionList.SigmaMult.Description" xml:space="preserve">
    <value>Width multiplier</value>
  </data>
  <data name="SingleSeriesPositionList.ShowNodes.Name" xml:space="preserve">
    <value>Show nodes</value>
  </data>
  <data name="SingleSeriesPositionList.ShowNodes.Description" xml:space="preserve">
    <value>Nodes are shown when true</value>
  </data>
  <data name="SingleSeriesProfile.Name" xml:space="preserve">
    <value>Single Series Profile</value>
  </data>
  <data name="SingleSeriesProfile.Description" xml:space="preserve">
    <value>A single series position profile (change of currency rate is not included) as a function of BA price</value>
  </data>
  <data name="SingleSeriesProfile.SigmaMult.Name" xml:space="preserve">
    <value>Width multiplier</value>
  </data>
  <data name="SingleSeriesProfile.SigmaMult.Description" xml:space="preserve">
    <value>Width multiplier</value>
  </data>
  <data name="SingleSeriesProfile.ShowNodes.Name" xml:space="preserve">
    <value>Show nodes</value>
  </data>
  <data name="SingleSeriesProfile.ShowNodes.Description" xml:space="preserve">
    <value>Nodes are shown when true</value>
  </data>
  <data name="SingleSeriesProfile.GreekAlgo.Name" xml:space="preserve">
    <value>Greek Algo</value>
  </data>
  <data name="SingleSeriesProfile.GreekAlgo.Description" xml:space="preserve">
    <value>FrozenSmile - smile is frozen; ShiftingSmile - smile shifts horizontally without modification</value>
  </data>
  <data name="SingleSeriesProfile.TooltipFormat.Name" xml:space="preserve">
    <value>Tooltip Format</value>
  </data>
  <data name="SingleSeriesProfile.TooltipFormat.Description" xml:space="preserve">
    <value>Tooltip format (i.e. '0.00', '0.0##' etc)</value>
  </data>
  <data name="SingleSeriesProfile.TwoSideDelta.Name" xml:space="preserve">
    <value>Two side delta</value>
  </data>
  <data name="SingleSeriesProfile.TwoSideDelta.Description" xml:space="preserve">
    <value>Calculate delta to the left and to the right from the strike</value>
  </data>
  <data name="SmileImitation3.Name" xml:space="preserve">
    <value>Smile Imitation v3</value>
  </data>
  <data name="SmileImitation3.Description" xml:space="preserve">
    <value>Smile imitation using arbitrary function with 3 parameters</value>
  </data>
  <data name="SmileImitation3.SigmaMult.Name" xml:space="preserve">
    <value>Width multiplier</value>
  </data>
  <data name="SmileImitation3.SigmaMult.Description" xml:space="preserve">
    <value>Width multiplier</value>
  </data>
  <data name="SmileImitation3.ShowNodes.Name" xml:space="preserve">
    <value>Show nodes</value>
  </data>
  <data name="SmileImitation3.ShowNodes.Description" xml:space="preserve">
    <value>Nodes are shown when true</value>
  </data>
  <data name="SmileImitation5.Name" xml:space="preserve">
    <value>Smile Imitation v5</value>
  </data>
  <data name="SmileImitation5.Description" xml:space="preserve">
    <value>Smile imitation using application-wide user function in Global Cache</value>
  </data>
  <data name="SmileImitation5.SigmaMult.Name" xml:space="preserve">
    <value>Width multiplier</value>
  </data>
  <data name="SmileImitation5.SigmaMult.Description" xml:space="preserve">
    <value>Width multiplier</value>
  </data>
  <data name="SmileImitation5.ShowNodes.Name" xml:space="preserve">
    <value>Show nodes</value>
  </data>
  <data name="SmileImitation5.ShowNodes.Description" xml:space="preserve">
    <value>Nodes are shown when true</value>
  </data>
  <data name="TotalCommission.Name" xml:space="preserve">
    <value>Total Commission</value>
  </data>
  <data name="TotalCommission.Description" xml:space="preserve">
    <value>Total commission including closed positions</value>
  </data>
  <data name="TotalQty.Name" xml:space="preserve">
    <value>Total Open Qty</value>
  </data>
  <data name="TotalQty.Description" xml:space="preserve">
    <value>Pure open position in a given security</value>
  </data>
  <data name="TotalRiskN2.Name" xml:space="preserve">
    <value>Total Risk N2</value>
  </data>
  <data name="TotalRiskN2.Description" xml:space="preserve">
    <value>Total risk of position as number of semistraddles</value>
  </data>
  <data name="TransformSmile.Name" xml:space="preserve">
    <value>Transform Smile</value>
  </data>
  <data name="TransformSmile.Description" xml:space="preserve">
    <value>Transform smile as requested in parameters</value>
  </data>
  <data name="VerticalLine2.Name" xml:space="preserve">
    <value>Vertical Line</value>
  </data>
  <data name="VerticalLine2.Description" xml:space="preserve">
    <value>Vertical line for CanvasPane. It is possible to trade base asset using this control.</value>
  </data>
  <data name="CentralStrike.SwitchRatioPct.Name" xml:space="preserve">
    <value>Switch Ratio Pct</value>
  </data>
  <data name="CentralStrike.SwitchRatioPct.Description" xml:space="preserve">
    <value>Market should pass this percent of distance to next strike to switch central strike</value>
  </data>
  <data name="CentralStrike.StrikeStep.Name" xml:space="preserve">
    <value>Strike step</value>
  </data>
  <data name="CentralStrike.StrikeStep.Description" xml:space="preserve">
    <value>Strike step to extract most important options</value>
  </data>
  <data name="CentralStrike.DisplayUnits.Name" xml:space="preserve">
    <value>Display Units</value>
  </data>
  <data name="CentralStrike.DisplayUnits.Description" xml:space="preserve">
    <value>Display units (hundreds, thousands, as is)</value>
  </data>
  <data name="CentralStrike.DisplayPrice.Name" xml:space="preserve">
    <value>Display Price</value>
  </data>
  <data name="CentralStrike.DisplayPrice.Description" xml:space="preserve">
    <value>Base asset price (only to display at UI)</value>
  </data>
  <data name="IvOnF.RepeatLastIv.Name" xml:space="preserve">
    <value>Repeat Last IV</value>
  </data>
  <data name="IvOnF.RepeatLastIv.Description" xml:space="preserve">
    <value>Handler should repeat last known value to avoid further logic errors</value>
  </data>
  <data name="AutoHedger.MinPeriod.Name" xml:space="preserve">
    <value>Period</value>
  </data>
  <data name="AutoHedger.MinPeriod.Description" xml:space="preserve">
    <value>Hedge period (seconds)</value>
  </data>
  <data name="BuyOptions.EntryShift.Name" xml:space="preserve">
    <value>Entry shift</value>
  </data>
  <data name="BuyOptions.EntryShift.Description" xml:space="preserve">
    <value>Entry shift to get lower buy price (price step)</value>
  </data>
  <data name="BuyOptions.ExitShift.Name" xml:space="preserve">
    <value>Exit shift</value>
  </data>
  <data name="BuyOptions.ExitShift.Description" xml:space="preserve">
    <value>Exit shift to get quick execution (price step)</value>
  </data>
  <data name="NumericalDeltaOnF3.PrintDeltaInLog.Name" xml:space="preserve">
    <value>Print in Log</value>
  </data>
  <data name="NumericalDeltaOnF3.PrintDeltaInLog.Description" xml:space="preserve">
    <value>Print delta in main log</value>
  </data>
  <data name="PositionsManager.BlockTrading.Name" xml:space="preserve">
    <value>Block Trading</value>
  </data>
  <data name="PositionsManager.BlockTrading.Description" xml:space="preserve">
    <value>When true trading is completely blocked to avoid user misclick errors</value>
  </data>
  <data name="PositionsManager.DropVirtualPos.Name" xml:space="preserve">
    <value>Drop Virtual Positions</value>
  </data>
  <data name="PositionsManager.DropVirtualPos.Description" xml:space="preserve">
    <value>Drop virtual positions</value>
  </data>
  <data name="PositionsManager.UseGlobalCache.Name" xml:space="preserve">
    <value>Use Global Cache</value>
  </data>
  <data name="PositionsManager.UseGlobalCache.Description" xml:space="preserve">
    <value>Use global cache</value>
  </data>
  <data name="SellOptions.OptionType.Name" xml:space="preserve">
    <value>Option type</value>
  </data>
  <data name="SellOptions.OptionType.Description" xml:space="preserve">
    <value>Limit trading to options of given type (call, put, both)</value>
  </data>
  <data name="SellOptions.FixedQty.Name" xml:space="preserve">
    <value>Order size</value>
  </data>
  <data name="SellOptions.FixedQty.Description" xml:space="preserve">
    <value>Order size</value>
  </data>
  <data name="SellOptions.EntryShift.Name" xml:space="preserve">
    <value>Entry shift</value>
  </data>
  <data name="SellOptions.EntryShift.Description" xml:space="preserve">
    <value>Entry shift to get higher sell price (price step)</value>
  </data>
  <data name="SellOptions.ExitShift.Name" xml:space="preserve">
    <value>Exit shift</value>
  </data>
  <data name="SellOptions.ExitShift.Description" xml:space="preserve">
    <value>Exit shift to get quick execution (price step)</value>
  </data>
  <data name="SellOptionGroup.OptionType.Name" xml:space="preserve">
    <value>Option type</value>
  </data>
  <data name="SellOptionGroup.OptionType.Description" xml:space="preserve">
    <value>Limit trading to options of given type (call, put, both)</value>
  </data>
  <data name="SellOptionGroup.FixedQty.Name" xml:space="preserve">
    <value>Order size</value>
  </data>
  <data name="SellOptionGroup.FixedQty.Description" xml:space="preserve">
    <value>Order size</value>
  </data>
  <data name="SellOptionGroup.EntryShift.Name" xml:space="preserve">
    <value>Entry shift</value>
  </data>
  <data name="SellOptionGroup.EntryShift.Description" xml:space="preserve">
    <value>Entry shift to get higher sell price (price step)</value>
  </data>
  <data name="SellOptionGroup.ExitShift.Name" xml:space="preserve">
    <value>Exit shift</value>
  </data>
  <data name="SellOptionGroup.ExitShift.Description" xml:space="preserve">
    <value>Exit shift to get quick execution (price step)</value>
  </data>
  <data name="SellOptionGroup.StrikeStep.Name" xml:space="preserve">
    <value>Strike step</value>
  </data>
  <data name="SellOptionGroup.StrikeStep.Description" xml:space="preserve">
    <value>Strike step to extract the most important options</value>
  </data>
  <data name="SellOptionGroup.StrikeAmount.Name" xml:space="preserve">
    <value>Strike amount</value>
  </data>
  <data name="SellOptionGroup.StrikeAmount.Description" xml:space="preserve">
    <value>Strike amount to set your orders (up and down from the central strike)</value>
  </data>
  <data name="SellOptionGroupDelta.FixedQty.Name" xml:space="preserve">
    <value>Order size</value>
  </data>
  <data name="SellOptionGroupDelta.FixedQty.Description" xml:space="preserve">
    <value>Order size</value>
  </data>
  <data name="SellOptionGroupDelta.EntryShift.Name" xml:space="preserve">
    <value>Entry shift</value>
  </data>
  <data name="SellOptionGroupDelta.EntryShift.Description" xml:space="preserve">
    <value>Entry shift to get higher sell price (price step)</value>
  </data>
  <data name="SellOptionGroupDelta.ExitShift.Name" xml:space="preserve">
    <value>Exit shift</value>
  </data>
  <data name="SellOptionGroupDelta.ExitShift.Description" xml:space="preserve">
    <value>Exit shift to get quick execution (price step)</value>
  </data>
  <data name="SellOptionGroupDelta.StrikeStep.Name" xml:space="preserve">
    <value>Strike step</value>
  </data>
  <data name="SellOptionGroupDelta.StrikeStep.Description" xml:space="preserve">
    <value>Strike step to extract the most important options</value>
  </data>
  <data name="SellOptionGroupDelta.MinDeltaPct.Name" xml:space="preserve">
    <value>Min delta, %</value>
  </data>
  <data name="SellOptionGroupDelta.MinDeltaPct.Description" xml:space="preserve">
    <value>The lowest working delta we allow to quote (as percents)</value>
  </data>
  <data name="SellOptionGroupDelta.MaxDeltaPct.Name" xml:space="preserve">
    <value>Max delta, %</value>
  </data>
  <data name="SellOptionGroupDelta.MaxDeltaPct.Description" xml:space="preserve">
    <value>The highest working delta we allow to quote (as percents)</value>
  </data>
  <data name="SellOptionGroupDelta.CheckAbsDelta.Name" xml:space="preserve">
    <value>Check absolute delta</value>
  </data>
  <data name="SellOptionGroupDelta.CheckAbsDelta.Description" xml:space="preserve">
    <value>Check absolute value of option's delta</value>
  </data>
  <data name="TotalProfit.Name" xml:space="preserve">
    <value>Profit ATM (IntSer)</value>
  </data>
  <data name="TotalProfit.Description" xml:space="preserve">
    <value>Numerical estimate of profit at-the-money (only one point is processed using position profile)</value>
  </data>
  <data name="TotalProfit.Profit.Name" xml:space="preserve">
    <value>Profit</value>
  </data>
  <data name="TotalProfit.Profit.Description" xml:space="preserve">
    <value>Current position profit</value>
  </data>
  <data name="TotalProfit.PrintProfitInLog.Name" xml:space="preserve">
    <value>Print in Log</value>
  </data>
  <data name="TotalProfit.PrintProfitInLog.Description" xml:space="preserve">
    <value>Print profit in main log</value>
  </data>
  <data name="TotalProfit.ScaleMultiplier.Name" xml:space="preserve">
    <value>Scale multiplier</value>
  </data>
  <data name="TotalProfit.ScaleMultiplier.Description" xml:space="preserve">
    <value>Scale multiplier to convert profit from price units to money (i.e. dollars or euros)</value>
  </data>
  <data name="OptionSelector.BaseSecPrefix.Name" xml:space="preserve">
    <value>Base asset</value>
  </data>
  <data name="OptionSelector.BaseSecPrefix.Description" xml:space="preserve">
    <value>Select Base Asset (RI, Si, Eu, ES, ...)</value>
  </data>
  <data name="OptionSelector.OptionSeries.Name" xml:space="preserve">
    <value>Option Series</value>
  </data>
  <data name="OptionSelector.OptionSeries.Description" xml:space="preserve">
    <value>Select option series (RIH5, SiG5, ESM6, ...)</value>
  </data>
  <data name="OptionSeriesSelector.Name" xml:space="preserve">
    <value>Option Series Selector</value>
  </data>
  <data name="OptionSeriesSelector.Description" xml:space="preserve">
    <value>Choose one of several option series from single OPTION source</value>
  </data>
  <data name="OptionSeriesSelector.AliveOnly.Name" xml:space="preserve">
    <value>Alive Only</value>
  </data>
  <data name="OptionSeriesSelector.AliveOnly.Description" xml:space="preserve">
    <value>Handler will use only alive option series</value>
  </data>
  <data name="OptionSeriesSelector.OptionSeries.Name" xml:space="preserve">
    <value>Option Series</value>
  </data>
  <data name="OptionSeriesSelector.OptionSeries.Description" xml:space="preserve">
    <value>Select option series (RIH5, SiG5, ESM6, ...)</value>
  </data>
  <data name="SeriesSelector.Name" xml:space="preserve">
    <value>Series Selector</value>
  </data>
  <data name="SeriesSelector.Description" xml:space="preserve">
    <value>Choose one of several option series</value>
  </data>
  <data name="SeriesSelector.AliveOnly.Name" xml:space="preserve">
    <value>Alive Only</value>
  </data>
  <data name="SeriesSelector.AliveOnly.Description" xml:space="preserve">
    <value>Handler will use only alive option series</value>
  </data>
  <data name="SeriesSelector.OptionSeries.Name" xml:space="preserve">
    <value>Option Series</value>
  </data>
  <data name="SeriesSelector.OptionSeries.Description" xml:space="preserve">
    <value>Select option series (RIH5, SiG5, ESM6, ...)</value>
  </data>
  <data name="GetValueAtm.Name" xml:space="preserve">
    <value>Get Value ATM (IntSer)</value>
  </data>
  <data name="GetValueAtm.Description" xml:space="preserve">
    <value>Numerical estimate of value at-the-money (only one point of profile is returned)</value>
  </data>
  <data name="GetValueAtm.Moneyness.Name" xml:space="preserve">
    <value>Moneyness</value>
  </data>
  <data name="GetValueAtm.Moneyness.Description" xml:space="preserve">
    <value>Moneyness</value>
  </data>
  <data name="GetValueAtm.Result.Name" xml:space="preserve">
    <value>Result</value>
  </data>
  <data name="GetValueAtm.Result.Description" xml:space="preserve">
    <value>Value ATM</value>
  </data>
  <data name="GetValueAtm.PrintInLog.Name" xml:space="preserve">
    <value>Print in Log</value>
  </data>
  <data name="GetValueAtm.PrintInLog.Description" xml:space="preserve">
    <value>Print in main log</value>
  </data>
  <data name="IvOnF2.Name" xml:space="preserve">
    <value>IV ATM (by tick)</value>
  </data>
  <data name="IvOnF2.Description" xml:space="preserve">
    <value>Implied Volatility at-the-money</value>
  </data>
  <data name="IvOnF2.RepeatLastIv.Name" xml:space="preserve">
    <value>Repeat Last IV</value>
  </data>
  <data name="IvOnF2.RepeatLastIv.Description" xml:space="preserve">
    <value>Handler should repeat last known value to avoid further logic errors</value>
  </data>
  <data name="IvOnF2.ReturnPct.Name" xml:space="preserve">
    <value>Return Pct</value>
  </data>
  <data name="IvOnF2.ReturnPct.Description" xml:space="preserve">
    <value>Values are calculated as percents</value>
  </data>
  <data name="IvOnF2.ShowNodes.Name" xml:space="preserve">
    <value>Show Nodes</value>
  </data>
  <data name="IvOnF2.ShowNodes.Description" xml:space="preserve">
    <value>Nodes are shown when true</value>
  </data>
  <data name="CloseVirtualFutPosition.FixedPx.Name" xml:space="preserve">
    <value>Fixed Price</value>
  </data>
  <data name="CloseVirtualFutPosition.FixedPx.Description" xml:space="preserve">
    <value>Exit price for virtual futures position</value>
  </data>
  <data name="CloseVirtualFutPosition.TimeToLive.Name" xml:space="preserve">
    <value>Time to Live</value>
  </data>
  <data name="CloseVirtualFutPosition.TimeToLive.Description" xml:space="preserve">
    <value>Position lifetime (in minutes)</value>
  </data>
  <data name="ExchangeTheorPx.Multiplier.Name" xml:space="preserve">
    <value>Multiplier</value>
  </data>
  <data name="ExchangeTheorPx.Multiplier.Description" xml:space="preserve">
    <value>Price multiplier</value>
  </data>
  <data name="ExchangeTheorPx.ShiftPx.Name" xml:space="preserve">
    <value>Shift</value>
  </data>
  <data name="ExchangeTheorPx.ShiftPx.Description" xml:space="preserve">
    <value>Price shift (price steps)</value>
  </data>
  <data name="ExchangeTheorSigma2.ReturnPct.Name" xml:space="preserve">
    <value>Return Pct</value>
  </data>
  <data name="ExchangeTheorSigma2.ReturnPct.Description" xml:space="preserve">
    <value>Return volatility as percents</value>
  </data>
  <data name="ExchangeTheorSigma2.OptionType.Name" xml:space="preserve">
    <value>Option Type</value>
  </data>
  <data name="ExchangeTheorSigma2.OptionType.Description" xml:space="preserve">
    <value>Option type (parameter Any is not recommended)</value>
  </data>
  <data name="ExchangeTheorSigma2.MultiplierPx.Name" xml:space="preserve">
    <value>Multiplier</value>
  </data>
  <data name="ExchangeTheorSigma2.MultiplierPx.Description" xml:space="preserve">
    <value>Price multiplier</value>
  </data>
  <data name="ExchangeTheorSigma2.ShiftPx.Name" xml:space="preserve">
    <value>Shift</value>
  </data>
  <data name="ExchangeTheorSigma2.ShiftPx.Description" xml:space="preserve">
    <value>Price shift (price steps)</value>
  </data>
  <data name="ExchangeTheorSigma2.ExpiryTime.Name" xml:space="preserve">
    <value>Expiry Time</value>
  </data>
  <data name="ExchangeTheorSigma2.ExpiryTime.Description" xml:space="preserve">
    <value>Exact expiration time of day (HH:mm)</value>
  </data>
  <data name="ExchangeTheorSigma3.ReturnPct.Name" xml:space="preserve">
    <value>Return Pct</value>
  </data>
  <data name="ExchangeTheorSigma3.ReturnPct.Description" xml:space="preserve">
    <value>Return volatility as percents</value>
  </data>
  <data name="ExchangeTheorSigma3.OptionType.Name" xml:space="preserve">
    <value>Option Type</value>
  </data>
  <data name="ExchangeTheorSigma3.OptionType.Description" xml:space="preserve">
    <value>Option type (parameter Any is not recommended)</value>
  </data>
  <data name="ExchangeTheorSigma3.MultiplierPx.Name" xml:space="preserve">
    <value>Multiplier</value>
  </data>
  <data name="ExchangeTheorSigma3.MultiplierPx.Description" xml:space="preserve">
    <value>Price multiplier</value>
  </data>
  <data name="ExchangeTheorSigma3.ShiftPx.Name" xml:space="preserve">
    <value>Shift</value>
  </data>
  <data name="ExchangeTheorSigma3.ShiftPx.Description" xml:space="preserve">
    <value>Price shift (price steps)</value>
  </data>
  <data name="ExchangeTheorSigma3.ExpiryTime.Name" xml:space="preserve">
    <value>Expiry Time</value>
  </data>
  <data name="ExchangeTheorSigma3.ExpiryTime.Description" xml:space="preserve">
    <value>Exact expiration time of day (HH:mm)</value>
  </data>
  <data name="ExchangeTheorSigma5.ReturnPct.Name" xml:space="preserve">
    <value>Return Pct</value>
  </data>
  <data name="ExchangeTheorSigma5.ReturnPct.Description" xml:space="preserve">
    <value>Return volatility as percents</value>
  </data>
  <data name="ExchangeTheorSigma5.RescaleTime.Name" xml:space="preserve">
    <value>Rescale Time</value>
  </data>
  <data name="ExchangeTheorSigma5.RescaleTime.Description" xml:space="preserve">
    <value>Rescale time-to-expiry to our internal?</value>
  </data>
  <data name="ExchangeTheorSigma5.OptionType.Name" xml:space="preserve">
    <value>Option Type</value>
  </data>
  <data name="ExchangeTheorSigma5.OptionType.Description" xml:space="preserve">
    <value>Option type (parameter Any is not recommended)</value>
  </data>
  <data name="ExchangeTheorSigma5.MultiplierPx.Name" xml:space="preserve">
    <value>Multiplier</value>
  </data>
  <data name="ExchangeTheorSigma5.MultiplierPx.Description" xml:space="preserve">
    <value>Price multiplier</value>
  </data>
  <data name="ExchangeTheorSigma5.ShiftPx.Name" xml:space="preserve">
    <value>Shift</value>
  </data>
  <data name="ExchangeTheorSigma5.ShiftPx.Description" xml:space="preserve">
    <value>Price shift (price steps)</value>
  </data>
  <data name="ExchangeTheorSigma5.ExpiryTime.Name" xml:space="preserve">
    <value>Expiry Time</value>
  </data>
  <data name="ExchangeTheorSigma5.ExpiryTime.Description" xml:space="preserve">
    <value>Exact expiration time of day (HH:mm)</value>
  </data>
  <data name="ForwardTheorPx.Strike.Name" xml:space="preserve">
    <value>Strike</value>
  </data>
  <data name="ForwardTheorPx.Strike.Description" xml:space="preserve">
    <value>Strike to calculate forward price</value>
  </data>
  <data name="GlobalHv.UseAllData.Name" xml:space="preserve">
    <value>Use All Data</value>
  </data>
  <data name="GlobalHv.UseAllData.Description" xml:space="preserve">
    <value>Should handler use all data including overnight gaps?</value>
  </data>
  <data name="GlobalHv.Period.Name" xml:space="preserve">
    <value>Period</value>
  </data>
  <data name="GlobalHv.Period.Description" xml:space="preserve">
    <value>Calculation period</value>
  </data>
  <data name="GlobalHv.Timeframe.Name" xml:space="preserve">
    <value>Timeframe</value>
  </data>
  <data name="GlobalHv.Timeframe.Description" xml:space="preserve">
    <value>Timeframe (seconds)</value>
  </data>
  <data name="GlobalHv.AnnualizingMultiplier.Name" xml:space="preserve">
    <value>Annualizing Multiplier</value>
  </data>
  <data name="GlobalHv.AnnualizingMultiplier.Description" xml:space="preserve">
    <value>Multiplier to convert volatility to annualized value</value>
  </data>
  <data name="GlobalHv.ReturnPct.Name" xml:space="preserve">
    <value>Return Pct</value>
  </data>
  <data name="GlobalHv.ReturnPct.Description" xml:space="preserve">
    <value>Return volatility as percents</value>
  </data>
  <data name="GlobalHv.RepeatLastHv.Name" xml:space="preserve">
    <value>Repeat Last HV</value>
  </data>
  <data name="GlobalHv.RepeatLastHv.Description" xml:space="preserve">
    <value>When true it will find and repeat last known value in case when current value is unavailable</value>
  </data>
  <data name="GaussSmile.IsVisiblePoints.Name" xml:space="preserve">
    <value>Show nodes</value>
  </data>
  <data name="GaussSmile.IsVisiblePoints.Description" xml:space="preserve">
    <value>Show nodes</value>
  </data>
  <data name="GaussSmile.GenerateTails.Name" xml:space="preserve">
    <value>Generate Tails</value>
  </data>
  <data name="GaussSmile.GenerateTails.Description" xml:space="preserve">
    <value>Prepare invisible tails to extend working range</value>
  </data>
  <data name="GaussSmile.IvAtmPct.Name" xml:space="preserve">
    <value>IV ATM</value>
  </data>
  <data name="GaussSmile.IvAtmPct.Description" xml:space="preserve">
    <value>IV ATM (percents)</value>
  </data>
  <data name="GaussSmile.ShiftPct.Name" xml:space="preserve">
    <value>Shift</value>
  </data>
  <data name="GaussSmile.ShiftPct.Description" xml:space="preserve">
    <value>Shift (percents)</value>
  </data>
  <data name="GaussSmile.DepthPct.Name" xml:space="preserve">
    <value>Depth</value>
  </data>
  <data name="GaussSmile.DepthPct.Description" xml:space="preserve">
    <value>Depth (percents)</value>
  </data>
  <data name="HV.UseAllData.Name" xml:space="preserve">
    <value>Use All Data</value>
  </data>
  <data name="HV.UseAllData.Description" xml:space="preserve">
    <value>Should handler use all data including overnight gaps?</value>
  </data>
  <data name="HV.Period.Name" xml:space="preserve">
    <value>Period</value>
  </data>
  <data name="HV.Period.Description" xml:space="preserve">
    <value>Calculation period</value>
  </data>
  <data name="HV.AnnualizingMultiplier.Name" xml:space="preserve">
    <value>Annualizing Multiplier</value>
  </data>
  <data name="HV.AnnualizingMultiplier.Description" xml:space="preserve">
    <value>Multiplier to convert volatility to annualized value</value>
  </data>
  <data name="HV.ReturnPct.Name" xml:space="preserve">
    <value>Return Pct</value>
  </data>
  <data name="HV.ReturnPct.Description" xml:space="preserve">
    <value>Return volatility as percents</value>
  </data>
  <data name="HV.Reset.Name" xml:space="preserve">
    <value>Repeat</value>
  </data>
  <data name="HV.Reset.Description" xml:space="preserve">
    <value>Repeat calculation for all bars every execution</value>
  </data>
  <data name="HV.UseGlobalCache.Name" xml:space="preserve">
    <value>Use Global Cache</value>
  </data>
  <data name="HV.UseGlobalCache.Description" xml:space="preserve">
    <value>Use global cache</value>
  </data>
  <data name="HV.AllowGlobalReadWrite.Name" xml:space="preserve">
    <value>Allow Global Write</value>
  </data>
  <data name="HV.AllowGlobalReadWrite.Description" xml:space="preserve">
    <value>Permission to write to Global Cache</value>
  </data>
  <data name="HV.GlobalSavePeriod.Name" xml:space="preserve">
    <value>Global Save Period</value>
  </data>
  <data name="HV.GlobalSavePeriod.Description" xml:space="preserve">
    <value>Period to write to Global Cache</value>
  </data>
  <data name="IvOnF.UseGlobalCache.Name" xml:space="preserve">
    <value>Use Global Cache</value>
  </data>
  <data name="IvOnF.UseGlobalCache.Description" xml:space="preserve">
    <value>Use global cache</value>
  </data>
  <data name="IvOnF.AllowGlobalReadWrite.Name" xml:space="preserve">
    <value>Allow Global Write</value>
  </data>
  <data name="IvOnF.AllowGlobalReadWrite.Description" xml:space="preserve">
    <value>Permission to write to Global Cache</value>
  </data>
  <data name="IvOnF.GlobalSavePeriod.Name" xml:space="preserve">
    <value>Global Save Period</value>
  </data>
  <data name="IvOnF.GlobalSavePeriod.Description" xml:space="preserve">
    <value>Period to write to Global Cache</value>
  </data>
  <data name="IvOnF.MinStrike.Name" xml:space="preserve">
    <value>Min strike</value>
  </data>
  <data name="IvOnF.MinStrike.Description" xml:space="preserve">
    <value>Min strike to be processed by handler</value>
  </data>
  <data name="IvOnF.MaxStrike.Name" xml:space="preserve">
    <value>Max strike</value>
  </data>
  <data name="IvOnF.MaxStrike.Description" xml:space="preserve">
    <value>Max strike to be processed by handler</value>
  </data>
  <data name="IvOnF.StrikeStep.Name" xml:space="preserve">
    <value>Strike step</value>
  </data>
  <data name="IvOnF.StrikeStep.Description" xml:space="preserve">
    <value>Strike step</value>
  </data>
  <data name="IvSmile.OptPxMode.Name" xml:space="preserve">
    <value>Price Mode</value>
  </data>
  <data name="IvSmile.OptPxMode.Description" xml:space="preserve">
    <value>Algorythm to get option price</value>
  </data>
  <data name="IvSmile.OptionType.Name" xml:space="preserve">
    <value>Option Type</value>
  </data>
  <data name="IvSmile.OptionType.Description" xml:space="preserve">
    <value>Option type to be used by handler (call, put, best volatility)</value>
  </data>
  <data name="IvSmile.ShiftBid.Name" xml:space="preserve">
    <value>Shift Bid</value>
  </data>
  <data name="IvSmile.ShiftBid.Description" xml:space="preserve">
    <value>Shift Bids down (price steps)</value>
  </data>
  <data name="IvSmile.ShiftAsk.Name" xml:space="preserve">
    <value>Shift Ask</value>
  </data>
  <data name="IvSmile.ShiftAsk.Description" xml:space="preserve">
    <value>Shift Asks up (price steps)</value>
  </data>
  <data name="IvSmile.MaxSigmaPct.Name" xml:space="preserve">
    <value>Max Sigma Pct</value>
  </data>
  <data name="IvSmile.MaxSigmaPct.Description" xml:space="preserve">
    <value>Max volatility limit (percents)</value>
  </data>
  <data name="IvSmile.MinStrike.Name" xml:space="preserve">
    <value>Min strike</value>
  </data>
  <data name="IvSmile.MinStrike.Description" xml:space="preserve">
    <value>Min strike to be processed by handler</value>
  </data>
  <data name="IvSmile.MaxStrike.Name" xml:space="preserve">
    <value>Max strike</value>
  </data>
  <data name="IvSmile.MaxStrike.Description" xml:space="preserve">
    <value>Max strike to be processed by handler</value>
  </data>
  <data name="IvSmile.StrikeStep.Name" xml:space="preserve">
    <value>Strike step</value>
  </data>
  <data name="IvSmile.StrikeStep.Description" xml:space="preserve">
    <value>Strike step</value>
  </data>
  <data name="BlackScholesConstSmile2.MinStrike.Name" xml:space="preserve">
    <value>Min Strike</value>
  </data>
  <data name="BlackScholesConstSmile2.MinStrike.Description" xml:space="preserve">
    <value>Min strike to be processed by handler</value>
  </data>
  <data name="BlackScholesConstSmile2.MaxStrike.Name" xml:space="preserve">
    <value>Max Strike</value>
  </data>
  <data name="BlackScholesConstSmile2.MaxStrike.Description" xml:space="preserve">
    <value>Max strike to be processed by handler</value>
  </data>
  <data name="BlackScholesConstSmile2.StrikeStep.Name" xml:space="preserve">
    <value>Strike Step</value>
  </data>
  <data name="BlackScholesConstSmile2.StrikeStep.Description" xml:space="preserve">
    <value>Strike step</value>
  </data>
  <data name="BlackScholesDelta.MinStrike.Name" xml:space="preserve">
    <value>Min strike</value>
  </data>
  <data name="BlackScholesDelta.MinStrike.Description" xml:space="preserve">
    <value>Min strike to be processed by handler</value>
  </data>
  <data name="BlackScholesDelta.MaxStrike.Name" xml:space="preserve">
    <value>Max strike</value>
  </data>
  <data name="BlackScholesDelta.MaxStrike.Description" xml:space="preserve">
    <value>Max strike to be processed by handler</value>
  </data>
  <data name="BlackScholesDelta.StrikeStep.Name" xml:space="preserve">
    <value>Strike step</value>
  </data>
  <data name="BlackScholesDelta.StrikeStep.Description" xml:space="preserve">
    <value>Strike step</value>
  </data>
  <data name="BlackScholesGreeks.MinStrike.Name" xml:space="preserve">
    <value>Min strike</value>
  </data>
  <data name="BlackScholesGreeks.MinStrike.Description" xml:space="preserve">
    <value>Min strike to be processed by handler</value>
  </data>
  <data name="BlackScholesGreeks.MaxStrike.Name" xml:space="preserve">
    <value>Max strike</value>
  </data>
  <data name="BlackScholesGreeks.MaxStrike.Description" xml:space="preserve">
    <value>Max strike to be processed by handler</value>
  </data>
  <data name="BlackScholesGreeks.StrikeStep.Name" xml:space="preserve">
    <value>Strike step</value>
  </data>
  <data name="BlackScholesGreeks.StrikeStep.Description" xml:space="preserve">
    <value>Strike step</value>
  </data>
  <data name="GaussSmile.MinStrike.Name" xml:space="preserve">
    <value>Min strike</value>
  </data>
  <data name="GaussSmile.MinStrike.Description" xml:space="preserve">
    <value>Min strike to be processed by handler</value>
  </data>
  <data name="GaussSmile.MaxStrike.Name" xml:space="preserve">
    <value>Max strike</value>
  </data>
  <data name="GaussSmile.MaxStrike.Description" xml:space="preserve">
    <value>Max strike to be processed by handler</value>
  </data>
  <data name="GaussSmile.StrikeStep.Name" xml:space="preserve">
    <value>Strike step</value>
  </data>
  <data name="GaussSmile.StrikeStep.Description" xml:space="preserve">
    <value>Strike step</value>
  </data>
  <data name="IvOnF2.UseGlobalCache.Name" xml:space="preserve">
    <value>Use Global Cache</value>
  </data>
  <data name="IvOnF2.UseGlobalCache.Description" xml:space="preserve">
    <value>Use global cache</value>
  </data>
  <data name="IvOnF2.AllowGlobalReadWrite.Name" xml:space="preserve">
    <value>Allow Global Write</value>
  </data>
  <data name="IvOnF2.AllowGlobalReadWrite.Description" xml:space="preserve">
    <value>Permission to write to Global Cache</value>
  </data>
  <data name="IvOnF2.GlobalSavePeriod.Name" xml:space="preserve">
    <value>Global Save Period</value>
  </data>
  <data name="IvOnF2.GlobalSavePeriod.Description" xml:space="preserve">
    <value>Period to write to Global Cache</value>
  </data>
  <data name="IvOnF2.MinStrike.Name" xml:space="preserve">
    <value>Min Strike</value>
  </data>
  <data name="IvOnF2.MinStrike.Description" xml:space="preserve">
    <value>Min strike to be processed by handler</value>
  </data>
  <data name="IvOnF2.MaxStrike.Name" xml:space="preserve">
    <value>Max Strike</value>
  </data>
  <data name="IvOnF2.MaxStrike.Description" xml:space="preserve">
    <value>Max strike to be processed by handler</value>
  </data>
  <data name="IvOnF2.StrikeStep.Name" xml:space="preserve">
    <value>Strike Step</value>
  </data>
  <data name="IvOnF2.StrikeStep.Description" xml:space="preserve">
    <value>Strike step</value>
  </data>
  <data name="SingleSeriesNumericalDelta.MinStrike.Name" xml:space="preserve">
    <value>Min Strike</value>
  </data>
  <data name="SingleSeriesNumericalDelta.MinStrike.Description" xml:space="preserve">
    <value>Min strike to be processed by handler</value>
  </data>
  <data name="SingleSeriesNumericalDelta.MaxStrike.Name" xml:space="preserve">
    <value>Max Strike</value>
  </data>
  <data name="SingleSeriesNumericalDelta.MaxStrike.Description" xml:space="preserve">
    <value>Max strike to be processed by handler</value>
  </data>
  <data name="SingleSeriesNumericalDelta.StrikeStep.Name" xml:space="preserve">
    <value>Strike Step</value>
  </data>
  <data name="SingleSeriesNumericalDelta.StrikeStep.Description" xml:space="preserve">
    <value>Strike step</value>
  </data>
  <data name="SingleSeriesNumericalDelta3.MinStrike.Name" xml:space="preserve">
    <value>Min Strike</value>
  </data>
  <data name="SingleSeriesNumericalDelta3.MinStrike.Description" xml:space="preserve">
    <value>Min strike to be processed by handler</value>
  </data>
  <data name="SingleSeriesNumericalDelta3.MaxStrike.Name" xml:space="preserve">
    <value>Max Strike</value>
  </data>
  <data name="SingleSeriesNumericalDelta3.MaxStrike.Description" xml:space="preserve">
    <value>Max strike to be processed by handler</value>
  </data>
  <data name="SingleSeriesNumericalDelta3.StrikeStep.Name" xml:space="preserve">
    <value>Strike Step</value>
  </data>
  <data name="SingleSeriesNumericalDelta3.StrikeStep.Description" xml:space="preserve">
    <value>Strike step</value>
  </data>
  <data name="SingleSeriesNumericalGamma.MinStrike.Name" xml:space="preserve">
    <value>Min Strike</value>
  </data>
  <data name="SingleSeriesNumericalGamma.MinStrike.Description" xml:space="preserve">
    <value>Min strike to be processed by handler</value>
  </data>
  <data name="SingleSeriesNumericalGamma.MaxStrike.Name" xml:space="preserve">
    <value>Max Strike</value>
  </data>
  <data name="SingleSeriesNumericalGamma.MaxStrike.Description" xml:space="preserve">
    <value>Max strike to be processed by handler</value>
  </data>
  <data name="SingleSeriesNumericalGamma.StrikeStep.Name" xml:space="preserve">
    <value>Strike Step</value>
  </data>
  <data name="SingleSeriesNumericalGamma.StrikeStep.Description" xml:space="preserve">
    <value>Strike step</value>
  </data>
  <data name="SingleSeriesNumericalGamma3.MinStrike.Name" xml:space="preserve">
    <value>Min Strike</value>
  </data>
  <data name="SingleSeriesNumericalGamma3.MinStrike.Description" xml:space="preserve">
    <value>Min strike to be processed by handler</value>
  </data>
  <data name="SingleSeriesNumericalGamma3.MaxStrike.Name" xml:space="preserve">
    <value>Max Strike</value>
  </data>
  <data name="SingleSeriesNumericalGamma3.MaxStrike.Description" xml:space="preserve">
    <value>Max strike to be processed by handler</value>
  </data>
  <data name="SingleSeriesNumericalGamma3.StrikeStep.Name" xml:space="preserve">
    <value>Strike Step</value>
  </data>
  <data name="SingleSeriesNumericalGamma3.StrikeStep.Description" xml:space="preserve">
    <value>Strike step</value>
  </data>
  <data name="SingleSeriesNumericalTheta.MinStrike.Name" xml:space="preserve">
    <value>Min Strike</value>
  </data>
  <data name="SingleSeriesNumericalTheta.MinStrike.Description" xml:space="preserve">
    <value>Min strike to be processed by handler</value>
  </data>
  <data name="SingleSeriesNumericalTheta.MaxStrike.Name" xml:space="preserve">
    <value>Max Strike</value>
  </data>
  <data name="SingleSeriesNumericalTheta.MaxStrike.Description" xml:space="preserve">
    <value>Max strike to be processed by handler</value>
  </data>
  <data name="SingleSeriesNumericalTheta.StrikeStep.Name" xml:space="preserve">
    <value>Strike Step</value>
  </data>
  <data name="SingleSeriesNumericalTheta.StrikeStep.Description" xml:space="preserve">
    <value>Strike step</value>
  </data>
  <data name="SingleSeriesNumericalVega.MinStrike.Name" xml:space="preserve">
    <value>Min Strike</value>
  </data>
  <data name="SingleSeriesNumericalVega.MinStrike.Description" xml:space="preserve">
    <value>Min strike to be processed by handler</value>
  </data>
  <data name="SingleSeriesNumericalVega.MaxStrike.Name" xml:space="preserve">
    <value>Max Strike</value>
  </data>
  <data name="SingleSeriesNumericalVega.MaxStrike.Description" xml:space="preserve">
    <value>Max strike to be processed by handler</value>
  </data>
  <data name="SingleSeriesNumericalVega.StrikeStep.Name" xml:space="preserve">
    <value>Strike Step</value>
  </data>
  <data name="SingleSeriesNumericalVega.StrikeStep.Description" xml:space="preserve">
    <value>Strike step</value>
  </data>
  <data name="IvOnFAllSeries.Name" xml:space="preserve">
    <value>IV ATM (all series)</value>
  </data>
  <data name="IvOnFAllSeries.Description" xml:space="preserve">
    <value>Implied Volatility at-the-money (all option series are processed)</value>
  </data>
  <data name="OptionSeriesByNumber2.ExpirationMode.Name" xml:space="preserve">
    <value>Expiration Algo</value>
  </data>
  <data name="OptionSeriesByNumber2.ExpirationMode.Description" xml:space="preserve">
    <value>Algorythm to determine expiration date</value>
  </data>
  <data name="OptionSeriesByNumber2.Expiry.Name" xml:space="preserve">
    <value>Expiry</value>
  </data>
  <data name="OptionSeriesByNumber2.Expiry.Description" xml:space="preserve">
    <value>Expiration datetime (including time of a day) for algorythm FixedExpiry</value>
  </data>
  <data name="OptionSeriesByNumber2.Number.Name" xml:space="preserve">
    <value>Series index</value>
  </data>
  <data name="OptionSeriesByNumber2.Number.Description" xml:space="preserve">
    <value>Series index (only alive series) for algorythm ExpiryByNumber</value>
  </data>
  <data name="SingleSeriesProfile.NodesCount.Name" xml:space="preserve">
    <value>Nodes Count</value>
  </data>
  <data name="SingleSeriesProfile.NodesCount.Description" xml:space="preserve">
    <value>Number of additional nodes near money</value>
  </data>
  <data name="NumericalDeltaOnF2.GreekAlgo.Name" xml:space="preserve">
    <value>Greek Algo</value>
  </data>
  <data name="NumericalDeltaOnF2.GreekAlgo.Description" xml:space="preserve">
    <value>FrozenSmile - smile is frozen; ShiftingSmile - smile shifts horizontally without modification</value>
  </data>
  <data name="NumericalDeltaOnF2.Delta.Name" xml:space="preserve">
    <value>Delta</value>
  </data>
  <data name="NumericalDeltaOnF2.Delta.Description" xml:space="preserve">
    <value>Current delta (just to show it on ControlPane)</value>
  </data>
  <data name="NumericalDeltaOnF2.HedgeDelta.Name" xml:space="preserve">
    <value>Align Delta</value>
  </data>
  <data name="NumericalDeltaOnF2.HedgeDelta.Description" xml:space="preserve">
    <value>Align delta (just to make button on ControlPane)</value>
  </data>
  <data name="OpenVirtualFutPosition.FixedPx.Name" xml:space="preserve">
    <value>Price</value>
  </data>
  <data name="OpenVirtualFutPosition.FixedPx.Description" xml:space="preserve">
    <value>Entry price of this virtual position</value>
  </data>
  <data name="OpenVirtualFutPosition.FixedQty.Name" xml:space="preserve">
    <value>Size</value>
  </data>
  <data name="OpenVirtualFutPosition.FixedQty.Description" xml:space="preserve">
    <value>Entry size of this virtual position</value>
  </data>
  <data name="OpenVirtualOptPosition.FixedStrike.Name" xml:space="preserve">
    <value>Strike</value>
  </data>
  <data name="OpenVirtualOptPosition.FixedStrike.Description" xml:space="preserve">
    <value>Strike of this virtual position</value>
  </data>
  <data name="OpenVirtualOptPosition.OptionType.Name" xml:space="preserve">
    <value>Option Type</value>
  </data>
  <data name="OpenVirtualOptPosition.OptionType.Description" xml:space="preserve">
    <value>Option type (parameter Any is not recommended)</value>
  </data>
  <data name="OpenVirtualOptPosition.FixedPx.Name" xml:space="preserve">
    <value>Price</value>
  </data>
  <data name="OpenVirtualOptPosition.FixedPx.Description" xml:space="preserve">
    <value>Entry price of this virtual position</value>
  </data>
  <data name="OpenVirtualOptPosition.FixedQty.Name" xml:space="preserve">
    <value>Size</value>
  </data>
  <data name="OpenVirtualOptPosition.FixedQty.Description" xml:space="preserve">
    <value>Entry size of this virtual position</value>
  </data>
  <data name="OptionSeriesByNumber.ExpirationMode.Name" xml:space="preserve">
    <value>Expiration Algo</value>
  </data>
  <data name="OptionSeriesByNumber.ExpirationMode.Description" xml:space="preserve">
    <value>Algorythm to determine expiration date</value>
  </data>
  <data name="OptionSeriesByNumber.Expiry.Name" xml:space="preserve">
    <value>Expiry</value>
  </data>
  <data name="OptionSeriesByNumber.Expiry.Description" xml:space="preserve">
    <value>Expiration datetime (including time of a day) for algorythm FixedExpiry</value>
  </data>
  <data name="OptionSeriesByNumber.Number.Name" xml:space="preserve">
    <value>Series index</value>
  </data>
  <data name="OptionSeriesByNumber.Number.Description" xml:space="preserve">
    <value>Series index (only alive series) for algorythm ExpiryByNumber</value>
  </data>
  <data name="TimeToExpiry.CurDateMode.Name" xml:space="preserve">
    <value>Current date algo</value>
  </data>
  <data name="TimeToExpiry.CurDateMode.Description" xml:space="preserve">
    <value>Current date algorythm</value>
  </data>
  <data name="TimeToExpiry.ExpirationMode.Name" xml:space="preserve">
    <value>Expiration algo</value>
  </data>
  <data name="TimeToExpiry.ExpirationMode.Description" xml:space="preserve">
    <value>Algorythm to determine expiration date</value>
  </data>
  <data name="TimeToExpiry.DistanceMode.Name" xml:space="preserve">
    <value>Estimation algo</value>
  </data>
  <data name="TimeToExpiry.DistanceMode.Description" xml:space="preserve">
    <value>Algorythm to estimate time-to-expiry</value>
  </data>
  <data name="TimeToExpiry.Expiry.Name" xml:space="preserve">
    <value>Expiry</value>
  </data>
  <data name="TimeToExpiry.Expiry.Description" xml:space="preserve">
    <value>Expiration datetime (including time of a day) for algorythm FixedExpiry</value>
  </data>
  <data name="TimeToExpiry.FixedDate.Name" xml:space="preserve">
    <value>Frozen 'today'</value>
  </data>
  <data name="TimeToExpiry.FixedDate.Description" xml:space="preserve">
    <value>Today datetime (including time of a day) for algorythm FixedDate</value>
  </data>
  <data name="TimeToExpiry.UseDays.Name" xml:space="preserve">
    <value>Use days</value>
  </data>
  <data name="TimeToExpiry.UseDays.Description" xml:space="preserve">
    <value>When true, handler calculates time to expiry as days</value>
  </data>
  <data name="TimeToExpiry.SeriesIndex.Name" xml:space="preserve">
    <value>Series index</value>
  </data>
  <data name="TimeToExpiry.SeriesIndex.Description" xml:space="preserve">
    <value>Series index (only alive series) for algorythm ExpiryByNumber</value>
  </data>
  <data name="TimeToExpiry.Time.Name" xml:space="preserve">
    <value>Time</value>
  </data>
  <data name="TimeToExpiry.Time.Description" xml:space="preserve">
    <value>Time to expiry (just to show it on ControlPane)</value>
  </data>
  <data name="TimeToExpiry.CurrentDateShift.Name" xml:space="preserve">
    <value>Current date shift</value>
  </data>
  <data name="TimeToExpiry.CurrentDateShift.Description" xml:space="preserve">
    <value>Shift current date by calendar time interval</value>
  </data>
  <data name="VerticalLine.SigmaLowPct.Name" xml:space="preserve">
    <value>Sigma Low, %</value>
  </data>
  <data name="VerticalLine.SigmaLowPct.Description" xml:space="preserve">
    <value>Low level of this marker (in percents)</value>
  </data>
  <data name="VerticalLine.SigmaHighPct.Name" xml:space="preserve">
    <value>Sigma High, %</value>
  </data>
  <data name="VerticalLine.SigmaHighPct.Description" xml:space="preserve">
    <value>High level of this marker (in percents)</value>
  </data>
  <data name="AutoHedger.SensitivityPct.Name" xml:space="preserve">
    <value>Sensitivity Pct</value>
  </data>
  <data name="AutoHedger.SensitivityPct.Description" xml:space="preserve">
    <value>Delta should pass this percent of distance to next integer value to align</value>
  </data>
  <data name="BlackScholesConstSmile2.SigmaPct.Name" xml:space="preserve">
    <value>Sigma, %</value>
  </data>
  <data name="BlackScholesConstSmile2.SigmaPct.Description" xml:space="preserve">
    <value>Volatility (percents)</value>
  </data>
  <data name="BlackScholesConstSmile2.SigmaMult.Name" xml:space="preserve">
    <value>Width multiplier</value>
  </data>
  <data name="BlackScholesConstSmile2.SigmaMult.Description" xml:space="preserve">
    <value>Width multiplier</value>
  </data>
  <data name="ChartTrading.Qty.Name" xml:space="preserve">
    <value>Size</value>
  </data>
  <data name="ChartTrading.Qty.Description" xml:space="preserve">
    <value>Trade quantity. Negative value reverts the signal.</value>
  </data>
  <data name="CurrentFutPx.Qty.Name" xml:space="preserve">
    <value>Size</value>
  </data>
  <data name="CurrentFutPx.Qty.Description" xml:space="preserve">
    <value>Trade quantity. Negative value reverts the signal.</value>
  </data>
  <data name="CurrentFutPx.TooltipFormat.Name" xml:space="preserve">
    <value>Tooltip format</value>
  </data>
  <data name="CurrentFutPx.TooltipFormat.Description" xml:space="preserve">
    <value>Tooltip format (i.e. '0.00', '0.0##', 'P2' etc)</value>
  </data>
  <data name="GetValueAtm.RepeatLastValue.Name" xml:space="preserve">
    <value>Repeat Last Value</value>
  </data>
  <data name="GetValueAtm.RepeatLastValue.Description" xml:space="preserve">
    <value>Handler should repeat last known value to avoid further logic errors</value>
  </data>
  <data name="NumericalDeltaOnF.GreekAlgo.Name" xml:space="preserve">
    <value>Greek Algo</value>
  </data>
  <data name="NumericalDeltaOnF.GreekAlgo.Description" xml:space="preserve">
    <value>FrozenSmile - smile is frozen; ShiftingSmile - smile shifts horizontally without modification</value>
  </data>
  <data name="NumericalDeltaOnF.Delta.Name" xml:space="preserve">
    <value>Delta</value>
  </data>
  <data name="NumericalDeltaOnF.Delta.Description" xml:space="preserve">
    <value>Current delta (just to show it on ControlPane)</value>
  </data>
  <data name="NumericalDeltaOnF.HedgeDelta.Name" xml:space="preserve">
    <value>Align Delta</value>
  </data>
  <data name="NumericalDeltaOnF.HedgeDelta.Description" xml:space="preserve">
    <value>Align delta (just to make button on ControlPane)</value>
  </data>
  <data name="NumericalDeltaOnF3.Delta.Name" xml:space="preserve">
    <value>Delta</value>
  </data>
  <data name="NumericalDeltaOnF3.Delta.Description" xml:space="preserve">
    <value>Current delta (just to show it on ControlPane)</value>
  </data>
  <data name="NumericalDeltaOnF3.HedgeDelta.Name" xml:space="preserve">
    <value>Align Delta</value>
  </data>
  <data name="NumericalDeltaOnF3.HedgeDelta.Description" xml:space="preserve">
    <value>Align delta (just to make button on ControlPane)</value>
  </data>
  <data name="NumericalGammaOnF.GreekAlgo.Name" xml:space="preserve">
    <value>Greek Algo</value>
  </data>
  <data name="NumericalGammaOnF.GreekAlgo.Description" xml:space="preserve">
    <value>FrozenSmile - smile is frozen; ShiftingSmile - smile shifts horizontally without modification</value>
  </data>
  <data name="NumericalGammaOnF.Gamma.Name" xml:space="preserve">
    <value>Gamma</value>
  </data>
  <data name="NumericalGammaOnF.Gamma.Description" xml:space="preserve">
    <value>Current gamma (just to show it on ControlPane)</value>
  </data>
  <data name="NumericalGammaOnF3.Gamma.Name" xml:space="preserve">
    <value>Gamma</value>
  </data>
  <data name="NumericalGammaOnF3.Gamma.Description" xml:space="preserve">
    <value>Current gamma (just to show it on ControlPane)</value>
  </data>
  <data name="NumericalThetaOnF.TStep.Name" xml:space="preserve">
    <value>Time Step</value>
  </data>
  <data name="NumericalThetaOnF.TStep.Description" xml:space="preserve">
    <value>Time step for numerical derivative</value>
  </data>
  <data name="NumericalThetaOnF.GreekAlgo.Name" xml:space="preserve">
    <value>Greek Algo</value>
  </data>
  <data name="NumericalThetaOnF.GreekAlgo.Description" xml:space="preserve">
    <value>FrozenSmile - smile is frozen; ShiftingSmile - smile shifts horizontally without modification</value>
  </data>
  <data name="NumericalThetaOnF.Theta.Name" xml:space="preserve">
    <value>Theta</value>
  </data>
  <data name="NumericalThetaOnF.Theta.Description" xml:space="preserve">
    <value>Current theta (just to show it on ControlPane)</value>
  </data>
  <data name="NumericalThetaOnF.DistanceMode.Name" xml:space="preserve">
    <value>Estimation algo</value>
  </data>
  <data name="NumericalThetaOnF.DistanceMode.Description" xml:space="preserve">
    <value>Algorythm to estimate time-to-expiry</value>
  </data>
  <data name="OpenVirtualFutPosition2.FixedPx.Name" xml:space="preserve">
    <value>Price</value>
  </data>
  <data name="OpenVirtualFutPosition2.FixedPx.Description" xml:space="preserve">
    <value>Entry price of this virtual position</value>
  </data>
  <data name="OpenVirtualFutPosition2.FixedQty.Name" xml:space="preserve">
    <value>Size</value>
  </data>
  <data name="OpenVirtualFutPosition2.FixedQty.Description" xml:space="preserve">
    <value>Entry size of this virtual position</value>
  </data>
  <data name="OpenVirtualOptPosition2.FixedStrike.Name" xml:space="preserve">
    <value>Strike</value>
  </data>
  <data name="OpenVirtualOptPosition2.FixedStrike.Description" xml:space="preserve">
    <value>Strike of this virtual position</value>
  </data>
  <data name="OpenVirtualOptPosition2.OptionType.Name" xml:space="preserve">
    <value>Option Type</value>
  </data>
  <data name="OpenVirtualOptPosition2.OptionType.Description" xml:space="preserve">
    <value>Option type (parameter Any is not recommended)</value>
  </data>
  <data name="OpenVirtualOptPosition2.FixedPx.Name" xml:space="preserve">
    <value>Price</value>
  </data>
  <data name="OpenVirtualOptPosition2.FixedPx.Description" xml:space="preserve">
    <value>Entry price of this virtual position</value>
  </data>
  <data name="OpenVirtualOptPosition2.FixedQty.Name" xml:space="preserve">
    <value>Size</value>
  </data>
  <data name="OpenVirtualOptPosition2.FixedQty.Description" xml:space="preserve">
    <value>Entry size of this virtual position</value>
  </data>
  <data name="SingleSeriesNumericalDelta.GreekAlgo.Name" xml:space="preserve">
    <value>Greek Algo</value>
  </data>
  <data name="SingleSeriesNumericalDelta.GreekAlgo.Description" xml:space="preserve">
    <value>FrozenSmile - smile is frozen; ShiftingSmile - smile shifts horizontally without modification</value>
  </data>
  <data name="SmileImitation5.SetSlopeByHands.Name" xml:space="preserve">
    <value>Set Skew Manually</value>
  </data>
  <data name="SmileImitation5.SetSlopeByHands.Description" xml:space="preserve">
    <value>Set skew manually</value>
  </data>
  <data name="SmileImitation5.SlopePct.Name" xml:space="preserve">
    <value>Skew, %</value>
  </data>
  <data name="SmileImitation5.SlopePct.Description" xml:space="preserve">
    <value>Skew (percents)</value>
  </data>
  <data name="TotalRiskN2.RepeatLastValue.Name" xml:space="preserve">
    <value>Repeat Last Value</value>
  </data>
  <data name="TotalRiskN2.RepeatLastValue.Description" xml:space="preserve">
    <value>Handler should repeat last known value to avoid further logic errors</value>
  </data>
  <data name="VerticalLine2.SigmaLowPct.Name" xml:space="preserve">
    <value>Sigma low, %</value>
  </data>
  <data name="VerticalLine2.SigmaLowPct.Description" xml:space="preserve">
    <value>Low level of this marker (in percents)</value>
  </data>
  <data name="VerticalLine2.SigmaHighPct.Name" xml:space="preserve">
    <value>Sigma high, %</value>
  </data>
  <data name="VerticalLine2.SigmaHighPct.Description" xml:space="preserve">
    <value>High level of this marker (in percents)</value>
  </data>
  <data name="VerticalLine2.Qty.Name" xml:space="preserve">
    <value>Size</value>
  </data>
  <data name="VerticalLine2.Qty.Description" xml:space="preserve">
    <value>Trade quantity. Negative value reverts the signal.</value>
  </data>
  <data name="FixedCommission.Name" xml:space="preserve">
    <value>Fixed Commission</value>
  </data>
  <data name="FixedCommission.Description" xml:space="preserve">
    <value>Fixed commission (it can apply 'scalper discount' available in MOEX)</value>
  </data>
  <data name="FixedCommission.ScalpingRule.Name" xml:space="preserve">
    <value>Scalping Discount</value>
  </data>
  <data name="FixedCommission.ScalpingRule.Description" xml:space="preserve">
    <value>Apply 'scalper discount' available in MOEX</value>
  </data>
  <data name="FixedCommission.FutCommission.Name" xml:space="preserve">
    <value>Futures commission</value>
  </data>
  <data name="FixedCommission.FutCommission.Description" xml:space="preserve">
    <value>Futures commission</value>
  </data>
  <data name="FixedCommission.OptCommission.Name" xml:space="preserve">
    <value>Option commission</value>
  </data>
  <data name="FixedCommission.OptCommission.Description" xml:space="preserve">
    <value>Option commission</value>
  </data>
  <data name="TimeToExpiry.ExpiryTime.Name" xml:space="preserve">
    <value>Expiry time</value>
  </data>
  <data name="TimeToExpiry.ExpiryTime.Description" xml:space="preserve">
    <value>Expiration time (including time of a day) for algorythms EXCEPT FixedExpiry</value>
  </data>
  <data name="BlackScholesDelta.TooltipFormat.Name" xml:space="preserve">
    <value>Tooltip format</value>
  </data>
  <data name="BlackScholesDelta.TooltipFormat.Description" xml:space="preserve">
    <value>Tooltip format (i.e. '0.00', '0.0##' etc)</value>
  </data>
  <data name="BlackScholesGreeks.Greek.Name" xml:space="preserve">
    <value>Greek</value>
  </data>
  <data name="BlackScholesGreeks.Greek.Description" xml:space="preserve">
    <value>Greek to be calculated (delta, theta, vega, gamma, etc)</value>
  </data>
  <data name="BlackScholesGreeks.TooltipFormat.Name" xml:space="preserve">
    <value>Tooltip Format</value>
  </data>
  <data name="BlackScholesGreeks.TooltipFormat.Description" xml:space="preserve">
    <value>Tooltip format (i.e. '0.00', '0.0##' etc)</value>
  </data>
  <data name="BuyOptions.OptionType.Name" xml:space="preserve">
    <value>Option type</value>
  </data>
  <data name="BuyOptions.OptionType.Description" xml:space="preserve">
    <value>Limit trading to options of given type (call, put, both)</value>
  </data>
  <data name="BuyOptions.FixedQty.Name" xml:space="preserve">
    <value>Order size</value>
  </data>
  <data name="BuyOptions.FixedQty.Description" xml:space="preserve">
    <value>Order size</value>
  </data>
  <data name="BuyOptionGroup.OptionType.Name" xml:space="preserve">
    <value>Option type</value>
  </data>
  <data name="BuyOptionGroup.OptionType.Description" xml:space="preserve">
    <value>Limit trading to options of given type (call, put, both)</value>
  </data>
  <data name="BuyOptionGroup.FixedQty.Name" xml:space="preserve">
    <value>Order size</value>
  </data>
  <data name="BuyOptionGroup.FixedQty.Description" xml:space="preserve">
    <value>Order size</value>
  </data>
  <data name="BuyOptionGroup.EntryShift.Name" xml:space="preserve">
    <value>Entry shift</value>
  </data>
  <data name="BuyOptionGroup.EntryShift.Description" xml:space="preserve">
    <value>Entry shift to get lower buy price (price step)</value>
  </data>
  <data name="BuyOptionGroup.ExitShift.Name" xml:space="preserve">
    <value>Exit shift</value>
  </data>
  <data name="BuyOptionGroup.ExitShift.Description" xml:space="preserve">
    <value>Exit shift to get quick execution (price step)</value>
  </data>
  <data name="BuyOptionGroup.StrikeStep.Name" xml:space="preserve">
    <value>Strike step</value>
  </data>
  <data name="BuyOptionGroup.StrikeStep.Description" xml:space="preserve">
    <value>Strike step to extract the most important options</value>
  </data>
  <data name="BuyOptionGroup.StrikeAmount.Name" xml:space="preserve">
    <value>Strike amount</value>
  </data>
  <data name="BuyOptionGroup.StrikeAmount.Description" xml:space="preserve">
    <value>Strike amount to set your orders (up and down from the central strike)</value>
  </data>
  <data name="BuyOptionGroupDelta.FixedQty.Name" xml:space="preserve">
    <value>Order size</value>
  </data>
  <data name="BuyOptionGroupDelta.FixedQty.Description" xml:space="preserve">
    <value>Order size</value>
  </data>
  <data name="BuyOptionGroupDelta.EntryShift.Name" xml:space="preserve">
    <value>Entry shift</value>
  </data>
  <data name="BuyOptionGroupDelta.EntryShift.Description" xml:space="preserve">
    <value>Entry shift to get lower buy price (price step)</value>
  </data>
  <data name="BuyOptionGroupDelta.ExitShift.Name" xml:space="preserve">
    <value>Exit shift</value>
  </data>
  <data name="BuyOptionGroupDelta.ExitShift.Description" xml:space="preserve">
    <value>Exit shift to get quick execution (price step)</value>
  </data>
  <data name="BuyOptionGroupDelta.StrikeStep.Name" xml:space="preserve">
    <value>Strike step</value>
  </data>
  <data name="BuyOptionGroupDelta.StrikeStep.Description" xml:space="preserve">
    <value>Strike step to extract the most important options</value>
  </data>
  <data name="BuyOptionGroupDelta.MinDeltaPct.Name" xml:space="preserve">
    <value>Min delta, %</value>
  </data>
  <data name="BuyOptionGroupDelta.MinDeltaPct.Description" xml:space="preserve">
    <value>The lowest working delta we allow to quote (as percents)</value>
  </data>
  <data name="BuyOptionGroupDelta.MaxDeltaPct.Name" xml:space="preserve">
    <value>Max delta, %</value>
  </data>
  <data name="BuyOptionGroupDelta.MaxDeltaPct.Description" xml:space="preserve">
    <value>The highest working delta we allow to quote (as percents)</value>
  </data>
  <data name="BuyOptionGroupDelta.CheckAbsDelta.Name" xml:space="preserve">
    <value>Check absolute delta</value>
  </data>
  <data name="BuyOptionGroupDelta.CheckAbsDelta.Description" xml:space="preserve">
    <value>Check absolute value of option's delta</value>
  </data>
  <data name="MarketMakerDelta.FixedQty.Name" xml:space="preserve">
    <value>Order size</value>
  </data>
  <data name="MarketMakerDelta.FixedQty.Description" xml:space="preserve">
    <value>Order size</value>
  </data>
  <data name="MarketMakerDelta.EntryShift.Name" xml:space="preserve">
    <value>Shift, p.s.</value>
  </data>
  <data name="MarketMakerDelta.EntryShift.Description" xml:space="preserve">
    <value>Shift to get better buy or sell price (price steps)</value>
  </data>
  <data name="MarketMakerDelta.EntryShiftIvPct.Name" xml:space="preserve">
    <value>Shift, %</value>
  </data>
  <data name="MarketMakerDelta.EntryShiftIvPct.Description" xml:space="preserve">
    <value>Shift to get better buy or sell price (percents of volatility)</value>
  </data>
  <data name="MarketMakerDelta.StrikeStep.Name" xml:space="preserve">
    <value>Strike step</value>
  </data>
  <data name="MarketMakerDelta.StrikeStep.Description" xml:space="preserve">
    <value>Strike step to extract the most important options</value>
  </data>
  <data name="MarketMakerDelta.MinDeltaPct.Name" xml:space="preserve">
    <value>Min delta, %</value>
  </data>
  <data name="MarketMakerDelta.MinDeltaPct.Description" xml:space="preserve">
    <value>The lowest working delta we allow to quote (as percents)</value>
  </data>
  <data name="MarketMakerDelta.MaxDeltaPct.Name" xml:space="preserve">
    <value>Max delta, %</value>
  </data>
  <data name="MarketMakerDelta.MaxDeltaPct.Description" xml:space="preserve">
    <value>The highest working delta we allow to quote (as percents)</value>
  </data>
  <data name="MarketMakerDelta.CheckAbsDelta.Name" xml:space="preserve">
    <value>Check absolute delta</value>
  </data>
  <data name="MarketMakerDelta.CheckAbsDelta.Description" xml:space="preserve">
    <value>Check absolute value of option's delta</value>
  </data>
  <data name="MarketMakerDelta.LiquidProAlgo.Name" xml:space="preserve">
    <value>Force all quotes</value>
  </data>
  <data name="MarketMakerDelta.LiquidProAlgo.Description" xml:space="preserve">
    <value>Set all quotes at all strikes (this mode is convinient with the Liquid.Pro service)</value>
  </data>
  <data name="MarketMakerDelta.MaxContractsOnStrike.Name" xml:space="preserve">
    <value>Max contracts at strike</value>
  </data>
  <data name="MarketMakerDelta.MaxContractsOnStrike.Description" xml:space="preserve">
    <value>Maximum amount of contracts at the single strike (absolute value)</value>
  </data>
  <data name="ChartTrading.OptionType.Name" xml:space="preserve">
    <value>Option Type</value>
  </data>
  <data name="ChartTrading.OptionType.Description" xml:space="preserve">
    <value>Option type (when Any, the handler will choose the best quote)</value>
  </data>
  <data name="ChartTrading.OptPxMode.Name" xml:space="preserve">
    <value>Quote Type</value>
  </data>
  <data name="ChartTrading.OptPxMode.Description" xml:space="preserve">
    <value>Quote type (ask or bid)</value>
  </data>
  <data name="CloseVirtualPosition.FixedPx.Name" xml:space="preserve">
    <value>Fixed Price</value>
  </data>
  <data name="CloseVirtualPosition.FixedPx.Description" xml:space="preserve">
    <value>Exit price for virtual position</value>
  </data>
  <data name="CloseVirtualPosition.TimeToLive.Name" xml:space="preserve">
    <value>Time to Live</value>
  </data>
  <data name="CloseVirtualPosition.TimeToLive.Description" xml:space="preserve">
    <value>Position lifetime (in minutes)</value>
  </data>
  <data name="CurrentFutPx.MinHeight.Name" xml:space="preserve">
    <value>Min Height</value>
  </data>
  <data name="CurrentFutPx.MinHeight.Description" xml:space="preserve">
    <value>Minimum height of the marker (absolute units)</value>
  </data>
  <data name="CurrentFutPx.OffsetPct.Name" xml:space="preserve">
    <value>Offset, %</value>
  </data>
  <data name="CurrentFutPx.OffsetPct.Description" xml:space="preserve">
    <value>Height of the marker (percents)</value>
  </data>
  <data name="DropVirtualPositions.DropPositions.Name" xml:space="preserve">
    <value>Drop Positions</value>
  </data>
  <data name="DropVirtualPositions.DropPositions.Description" xml:space="preserve">
    <value>Drop virtual positions</value>
  </data>
  <data name="FixedValue.DisplayUnits.Name" xml:space="preserve">
    <value>Display Units</value>
  </data>
  <data name="FixedValue.DisplayUnits.Description" xml:space="preserve">
    <value>Display units (hundreds, thousands, as is)</value>
  </data>
  <data name="IvSmile2.OptPxMode.Name" xml:space="preserve">
    <value>Price Mode</value>
  </data>
  <data name="IvSmile2.OptPxMode.Description" xml:space="preserve">
    <value>Algorythm to get option price</value>
  </data>
  <data name="IvSmile2.OptionType.Name" xml:space="preserve">
    <value>Option Type</value>
  </data>
  <data name="IvSmile2.OptionType.Description" xml:space="preserve">
    <value>Option type to be used by handler (call, put, best volatility)</value>
  </data>
  <data name="IvSmile2.ShiftBid.Name" xml:space="preserve">
    <value>Shift Bid</value>
  </data>
  <data name="IvSmile2.ShiftBid.Description" xml:space="preserve">
    <value>Shift Bids down (price steps)</value>
  </data>
  <data name="IvSmile2.ShiftAsk.Name" xml:space="preserve">
    <value>Shift Ask</value>
  </data>
  <data name="IvSmile2.ShiftAsk.Description" xml:space="preserve">
    <value>Shift Asks up (price steps)</value>
  </data>
  <data name="IvSmile2.MaxSigmaPct.Name" xml:space="preserve">
    <value>Max Sigma, %</value>
  </data>
  <data name="IvSmile2.MaxSigmaPct.Description" xml:space="preserve">
    <value>Maximum volatility (percents)</value>
  </data>
  <data name="LinearTransform.Add.Name" xml:space="preserve">
    <value>Summand</value>
  </data>
  <data name="LinearTransform.Add.Description" xml:space="preserve">
    <value>Summand</value>
  </data>
  <data name="LinearTransform.Mult.Name" xml:space="preserve">
    <value>Multiplier</value>
  </data>
  <data name="LinearTransform.Mult.Description" xml:space="preserve">
    <value>Multiplier</value>
  </data>
  <data name="PositionsManager.UseVirtualPositions.Name" xml:space="preserve">
    <value>Virtual Positions</value>
  </data>
  <data name="PositionsManager.UseVirtualPositions.Description" xml:space="preserve">
    <value>When true it will create only virtual positions without sending orders in market</value>
  </data>
  <data name="PositionsManager.ImportRealPos.Name" xml:space="preserve">
    <value>Import Real Pos</value>
  </data>
  <data name="PositionsManager.ImportRealPos.Description" xml:space="preserve">
    <value>Button to import real positions</value>
  </data>
  <data name="SetViewport.ManageX.Name" xml:space="preserve">
    <value>Manage X</value>
  </data>
  <data name="SetViewport.ManageX.Description" xml:space="preserve">
    <value>Manage horizontal axis</value>
  </data>
  <data name="SetViewport.ManageY.Name" xml:space="preserve">
    <value>Manage Y</value>
  </data>
  <data name="SetViewport.ManageY.Description" xml:space="preserve">
    <value>Manage vertical axis</value>
  </data>
  <data name="SetViewport.VerticalMultiplier.Name" xml:space="preserve">
    <value>Height Multiplier</value>
  </data>
  <data name="SetViewport.VerticalMultiplier.Description" xml:space="preserve">
    <value>Multiplier to estimate viewport height</value>
  </data>
  <data name="SetViewport.ApplyVisualSettings.Name" xml:space="preserve">
    <value>Apply settings</value>
  </data>
  <data name="SetViewport.ApplyVisualSettings.Description" xml:space="preserve">
    <value>Apply visual settings</value>
  </data>
  <data name="SetViewport.ManageChildX.Name" xml:space="preserve">
    <value>Manage child X</value>
  </data>
  <data name="SetViewport.ManageChildX.Description" xml:space="preserve">
    <value>Manage horizontal axis of secondary panes</value>
  </data>
  <data name="SingleSeriesNumericalDelta.TooltipFormat.Name" xml:space="preserve">
    <value>Tooltip Format</value>
  </data>
  <data name="SingleSeriesNumericalDelta.TooltipFormat.Description" xml:space="preserve">
    <value>Tooltip format (i.e. '0.00', '0.0##' etc)</value>
  </data>
  <data name="SingleSeriesNumericalDelta3.TooltipFormat.Name" xml:space="preserve">
    <value>Tooltip Format</value>
  </data>
  <data name="SingleSeriesNumericalDelta3.TooltipFormat.Description" xml:space="preserve">
    <value>Tooltip format (i.e. '0.00', '0.0##' etc)</value>
  </data>
  <data name="SingleSeriesNumericalGamma.GreekAlgo.Name" xml:space="preserve">
    <value>Greek Algo</value>
  </data>
  <data name="SingleSeriesNumericalGamma.GreekAlgo.Description" xml:space="preserve">
    <value>FrozenSmile - smile is frozen; ShiftingSmile - smile shifts horizontally without modification</value>
  </data>
  <data name="SingleSeriesNumericalGamma.TooltipFormat.Name" xml:space="preserve">
    <value>Tooltip Format</value>
  </data>
  <data name="SingleSeriesNumericalGamma.TooltipFormat.Description" xml:space="preserve">
    <value>Tooltip format (i.e. '0.00', '0.0##' etc)</value>
  </data>
  <data name="SingleSeriesNumericalGamma3.TooltipFormat.Name" xml:space="preserve">
    <value>Tooltip Format</value>
  </data>
  <data name="SingleSeriesNumericalGamma3.TooltipFormat.Description" xml:space="preserve">
    <value>Tooltip format (i.e. '0.00', '0.0##' etc)</value>
  </data>
  <data name="SingleSeriesNumericalTheta.GreekAlgo.Name" xml:space="preserve">
    <value>Greek Algo</value>
  </data>
  <data name="SingleSeriesNumericalTheta.GreekAlgo.Description" xml:space="preserve">
    <value>FrozenSmile - smile is frozen; ShiftingSmile - smile shifts horizontally without modification</value>
  </data>
  <data name="SingleSeriesNumericalTheta.TStep.Name" xml:space="preserve">
    <value>Time Step</value>
  </data>
  <data name="SingleSeriesNumericalTheta.TStep.Description" xml:space="preserve">
    <value>Time step for numerical derivative</value>
  </data>
  <data name="SingleSeriesNumericalTheta.DistanceMode.Name" xml:space="preserve">
    <value>Estimation algo</value>
  </data>
  <data name="SingleSeriesNumericalTheta.DistanceMode.Description" xml:space="preserve">
    <value>Algorythm to estimate time-to-expiry</value>
  </data>
  <data name="SingleSeriesNumericalTheta.TooltipFormat.Name" xml:space="preserve">
    <value>Tooltip Format</value>
  </data>
  <data name="SingleSeriesNumericalTheta.TooltipFormat.Description" xml:space="preserve">
    <value>Tooltip format (i.e. '0.00', '0.0##' etc)</value>
  </data>
  <data name="SingleSeriesNumericalVega.GreekAlgo.Name" xml:space="preserve">
    <value>Greek Algo</value>
  </data>
  <data name="SingleSeriesNumericalVega.GreekAlgo.Description" xml:space="preserve">
    <value>FrozenSmile - smile is frozen; ShiftingSmile - smile shifts horizontally without modification</value>
  </data>
  <data name="SingleSeriesNumericalVega.SigmaStep.Name" xml:space="preserve">
    <value>Sigma Step</value>
  </data>
  <data name="SingleSeriesNumericalVega.SigmaStep.Description" xml:space="preserve">
    <value>Sigma step for numerical derivative</value>
  </data>
  <data name="SingleSeriesNumericalVega.TooltipFormat.Name" xml:space="preserve">
    <value>Tooltip Format</value>
  </data>
  <data name="SingleSeriesNumericalVega.TooltipFormat.Description" xml:space="preserve">
    <value>Tooltip format (i.e. '0.00', '0.0##' etc)</value>
  </data>
  <data name="SingleSeriesPositionGrid.OptionType.Name" xml:space="preserve">
    <value>Option Type</value>
  </data>
  <data name="SingleSeriesPositionGrid.OptionType.Description" xml:space="preserve">
    <value>Option type to be used by handler (call, put, sum of both)</value>
  </data>
  <data name="SingleSeriesPositionGrid.CountFutures.Name" xml:space="preserve">
    <value>Count Futures</value>
  </data>
  <data name="SingleSeriesPositionGrid.CountFutures.Description" xml:space="preserve">
    <value>Count base asset</value>
  </data>
  <data name="SingleSeriesPositionGrid.TooltipFormat.Name" xml:space="preserve">
    <value>Tooltip Format</value>
  </data>
  <data name="SingleSeriesPositionGrid.TooltipFormat.Description" xml:space="preserve">
    <value>Tooltip format (i.e. '0.00', '0.0##' etc)</value>
  </data>
  <data name="SingleSeriesPositionList.CountFutures.Name" xml:space="preserve">
    <value>Count Futures</value>
  </data>
  <data name="SingleSeriesPositionList.CountFutures.Description" xml:space="preserve">
    <value>Count base asset</value>
  </data>
  <data name="SingleSeriesPositionList.TooltipFormat.Name" xml:space="preserve">
    <value>Tooltip Format</value>
  </data>
  <data name="SingleSeriesPositionList.TooltipFormat.Description" xml:space="preserve">
    <value>Tooltip format (i.e. '0.00', '0.0##' etc)</value>
  </data>
  <data name="TotalQty.OpenQty.Name" xml:space="preserve">
    <value>Open Qty</value>
  </data>
  <data name="TotalQty.OpenQty.Description" xml:space="preserve">
    <value>Total open quantity</value>
  </data>
  <data name="TotalRiskN2.DisplayUnits.Name" xml:space="preserve">
    <value>Display Units</value>
  </data>
  <data name="TotalRiskN2.DisplayUnits.Description" xml:space="preserve">
    <value>Display units (hundreds, thousands, as is)</value>
  </data>
  <data name="TotalRiskN2.DisplayRisk.Name" xml:space="preserve">
    <value>Risk</value>
  </data>
  <data name="TotalRiskN2.DisplayRisk.Description" xml:space="preserve">
    <value>Risk (just to display at UI)</value>
  </data>
  <data name="TransformSmile.Transformation.Name" xml:space="preserve">
    <value>Transformation</value>
  </data>
  <data name="TransformSmile.Transformation.Description" xml:space="preserve">
    <value>Algorythm to transform smile (LogSimmetrise, Simmetrise, None)</value>
  </data>
  <data name="TransformSmile.OptPxMode.Name" xml:space="preserve">
    <value>Price Mode</value>
  </data>
  <data name="TransformSmile.OptPxMode.Description" xml:space="preserve">
    <value>Algorythm to get option price</value>
  </data>
  <data name="EditTemplateSmile.NumberOfNodes.Name" xml:space="preserve">
    <value>Number of Nodes</value>
  </data>
  <data name="EditTemplateSmile.NumberOfNodes.Description" xml:space="preserve">
    <value>Number of nodes to edit</value>
  </data>
  <data name="EditTemplateSmile.NodeStep.Name" xml:space="preserve">
    <value>Node Step</value>
  </data>
  <data name="EditTemplateSmile.NodeStep.Description" xml:space="preserve">
    <value>Node step</value>
  </data>
  <data name="EditTemplateSmile.ShapePct.Name" xml:space="preserve">
    <value>Shape</value>
  </data>
  <data name="EditTemplateSmile.ShapePct.Description" xml:space="preserve">
    <value>Shape</value>
  </data>
  <data name="EditTemplateSmile.ResetSmile.Name" xml:space="preserve">
    <value>Reset</value>
  </data>
  <data name="EditTemplateSmile.ResetSmile.Description" xml:space="preserve">
    <value>Button to reset smile to initial state</value>
  </data>
  <data name="EditTemplateSmile.LoadSplineCoeffs.Name" xml:space="preserve">
    <value>Load spline</value>
  </data>
  <data name="EditTemplateSmile.LoadSplineCoeffs.Description" xml:space="preserve">
    <value>Load spline coefficients from Global Cache</value>
  </data>
  <data name="EditTemplateSmile.PasteGlobal.Name" xml:space="preserve">
    <value>Paste</value>
  </data>
  <data name="EditTemplateSmile.PasteGlobal.Description" xml:space="preserve">
    <value>Get spline from clipboard</value>
  </data>
  <data name="EditTemplateSmile.PrepareSplineCoeffs.Name" xml:space="preserve">
    <value>Prepare Spline</value>
  </data>
  <data name="EditTemplateSmile.PrepareSplineCoeffs.Description" xml:space="preserve">
    <value>Prepare spline coefficients</value>
  </data>
  <data name="EditTemplateSmile.FrozenSmileID.Name" xml:space="preserve">
    <value>Frozen Smile ID</value>
  </data>
  <data name="EditTemplateSmile.FrozenSmileID.Description" xml:space="preserve">
    <value>Smile ID to be used with Local Cache</value>
  </data>
  <data name="EditTemplateSmile.GlobalSmileID.Name" xml:space="preserve">
    <value>Global Smile ID</value>
  </data>
  <data name="EditTemplateSmile.GlobalSmileID.Description" xml:space="preserve">
    <value>Smile ID to be used with Global Cache</value>
  </data>
  <data name="FixedValue.MinValue.Name" xml:space="preserve">
    <value>Minimum</value>
  </data>
  <data name="FixedValue.MinValue.Description" xml:space="preserve">
    <value>Minimum for internal representation</value>
  </data>
  <data name="FixedValue.Value.Name" xml:space="preserve">
    <value>Value</value>
  </data>
  <data name="FixedValue.Value.Description" xml:space="preserve">
    <value>Constant value (always above the limit 'Minimum')</value>
  </data>
  <data name="SingleSeriesPositionList.DisplayMode.Name" xml:space="preserve">
    <value>Display Property</value>
  </data>
  <data name="SingleSeriesPositionList.DisplayMode.Description" xml:space="preserve">
    <value>Position property to be displayed</value>
  </data>
  <data name="SingleSeriesPositionList.MaxPositions.Name" xml:space="preserve">
    <value>Max Positions</value>
  </data>
  <data name="SingleSeriesPositionList.MaxPositions.Description" xml:space="preserve">
    <value>Limit number of positions to show</value>
  </data>
  <data name="SmileImitation3.SetIvByHands.Name" xml:space="preserve">
    <value>Set IV</value>
  </data>
  <data name="SmileImitation3.SetIvByHands.Description" xml:space="preserve">
    <value>Set IV manually</value>
  </data>
  <data name="SmileImitation3.SetSlopeByHands.Name" xml:space="preserve">
    <value>Set Skew Manually</value>
  </data>
  <data name="SmileImitation3.SetSlopeByHands.Description" xml:space="preserve">
    <value>Set skew manually</value>
  </data>
  <data name="SmileImitation3.GenerateTails.Name" xml:space="preserve">
    <value>Generate Tails</value>
  </data>
  <data name="SmileImitation3.GenerateTails.Description" xml:space="preserve">
    <value>Generate invisible tails</value>
  </data>
  <data name="SmileImitation3.IsVisiblePoints.Name" xml:space="preserve">
    <value>Show nodes</value>
  </data>
  <data name="SmileImitation3.IsVisiblePoints.Description" xml:space="preserve">
    <value>Show nodes</value>
  </data>
  <data name="SmileImitation3.IvAtmPct.Name" xml:space="preserve">
    <value>IV ATM, %</value>
  </data>
  <data name="SmileImitation3.IvAtmPct.Description" xml:space="preserve">
    <value>IV ATM (percents)</value>
  </data>
  <data name="SmileImitation3.ShiftPct.Name" xml:space="preserve">
    <value>Shift, %</value>
  </data>
  <data name="SmileImitation3.ShiftPct.Description" xml:space="preserve">
    <value>Shift (percents)</value>
  </data>
  <data name="SmileImitation3.DepthPct.Name" xml:space="preserve">
    <value>Depth, %</value>
  </data>
  <data name="SmileImitation3.DepthPct.Description" xml:space="preserve">
    <value>Depth (percents)</value>
  </data>
  <data name="SmileImitation3.SlopeAtmPct.Name" xml:space="preserve">
    <value>Skew, %</value>
  </data>
  <data name="SmileImitation3.SlopeAtmPct.Description" xml:space="preserve">
    <value>Skew (percents)</value>
  </data>
  <data name="SmileImitation5.SetIvByHands.Name" xml:space="preserve">
    <value>Set IV</value>
  </data>
  <data name="SmileImitation5.SetIvByHands.Description" xml:space="preserve">
    <value>Set IV manually</value>
  </data>
  <data name="SmileImitation5.SetShapeByHands.Name" xml:space="preserve">
    <value>Set Shape Manually</value>
  </data>
  <data name="SmileImitation5.SetShapeByHands.Description" xml:space="preserve">
    <value>Set shape manually</value>
  </data>
  <data name="SmileImitation5.GenerateTails.Name" xml:space="preserve">
    <value>Generate Tails</value>
  </data>
  <data name="SmileImitation5.GenerateTails.Description" xml:space="preserve">
    <value>Generate invisible tails</value>
  </data>
  <data name="SmileImitation5.IsVisiblePoints.Name" xml:space="preserve">
    <value>Show nodes</value>
  </data>
  <data name="SmileImitation5.IsVisiblePoints.Description" xml:space="preserve">
    <value>Show nodes</value>
  </data>
  <data name="SmileImitation5.UseLocalTemplate.Name" xml:space="preserve">
    <value>Use Local Template</value>
  </data>
  <data name="SmileImitation5.UseLocalTemplate.Description" xml:space="preserve">
    <value>Use template from global or from local cache</value>
  </data>
  <data name="SmileImitation5.IvAtmPct.Name" xml:space="preserve">
    <value>IV ATM, %</value>
  </data>
  <data name="SmileImitation5.IvAtmPct.Description" xml:space="preserve">
    <value>IV ATM (percents)</value>
  </data>
  <data name="SmileImitation5.ShapePct.Name" xml:space="preserve">
    <value>Shape, %</value>
  </data>
  <data name="SmileImitation5.ShapePct.Description" xml:space="preserve">
    <value>Shape (percents)</value>
  </data>
  <data name="SmileImitation5.FrozenSmileID.Name" xml:space="preserve">
    <value>Frozen Smile ID</value>
  </data>
  <data name="SmileImitation5.FrozenSmileID.Description" xml:space="preserve">
    <value>Smile ID to be used with Local Cache</value>
  </data>
  <data name="SmileImitation5.GlobalSmileID.Name" xml:space="preserve">
    <value>Global Smile ID</value>
  </data>
  <data name="SmileImitation5.GlobalSmileID.Description" xml:space="preserve">
    <value>Smile ID to be used with Global Cache</value>
  </data>
  <data name="SmileImitation5.NoLocalSmile" xml:space="preserve">
    <value>[{0}] There is no LOCAL smile with ID:{1}</value>
  </data>
  <data name="SmileImitation5.NoGlobalSmile" xml:space="preserve">
    <value>[{0}] There is no global templateInfo with ID:{1}. I'll try to use default one.</value>
  </data>
  <data name="SmileImitation5.TemplateWasSaved" xml:space="preserve">
    <value>[{0}] Default templateInfo was saved to Global Cache with ID:{1}</value>
  </data>
  <data name="TransformSmile.ShiftIvPct.Name" xml:space="preserve">
    <value>Shift IV, %</value>
  </data>
  <data name="TransformSmile.ShiftIvPct.Description" xml:space="preserve">
    <value>Additional vertical smile shift (in percents)</value>
  </data>
  <data name="TransformSmile.SimmWeight.Name" xml:space="preserve">
    <value>Weight</value>
  </data>
  <data name="TransformSmile.SimmWeight.Description" xml:space="preserve">
    <value>Weight (0 -- initial function; 0.5 -- simmetrised; 1 -- mirrored)</value>
  </data>
  <data name="PositionsManager.AgregatePositions.Name" xml:space="preserve">
    <value>Agregate positions</value>
  </data>
  <data name="PositionsManager.AgregatePositions.Description" xml:space="preserve">
    <value>When true it will agregate positions of similar directions in one</value>
  </data>
  <data name="TimeToExpiry2.Name" xml:space="preserve">
    <value>Time to expiry</value>
  </data>
  <data name="TimeToExpiry2.Description" xml:space="preserve">
    <value>Time to expiry in year fractions. Various algorithms are applied (fixed time, plain calendar time, plain calendar time including days off and so on).</value>
  </data>
  <data name="TimeToExpiry2.CurDateMode.Name" xml:space="preserve">
    <value>Current date algo</value>
  </data>
  <data name="TimeToExpiry2.CurDateMode.Description" xml:space="preserve">
    <value>Current date algorythm</value>
  </data>
  <data name="TimeToExpiry2.ExpirationMode.Name" xml:space="preserve">
    <value>Expiration algo</value>
  </data>
  <data name="TimeToExpiry2.ExpirationMode.Description" xml:space="preserve">
    <value>Algorythm to determine expiration date</value>
  </data>
  <data name="TimeToExpiry2.DistanceMode.Name" xml:space="preserve">
    <value>Estimation algo</value>
  </data>
  <data name="TimeToExpiry2.DistanceMode.Description" xml:space="preserve">
    <value>Algorythm to estimate time-to-expiry</value>
  </data>
  <data name="TimeToExpiry2.Expiry.Name" xml:space="preserve">
    <value>Expiry</value>
  </data>
  <data name="TimeToExpiry2.Expiry.Description" xml:space="preserve">
    <value>Expiration datetime (including time of a day) for algorythm FixedExpiry</value>
  </data>
  <data name="TimeToExpiry2.ExpiryTime.Name" xml:space="preserve">
    <value>Expiry time</value>
  </data>
  <data name="TimeToExpiry2.ExpiryTime.Description" xml:space="preserve">
    <value>Expiration time (including time of a day) for algorythms except FixedExpiry</value>
  </data>
  <data name="TimeToExpiry2.FixedDate.Name" xml:space="preserve">
    <value>Frozen 'today'</value>
  </data>
  <data name="TimeToExpiry2.FixedDate.Description" xml:space="preserve">
    <value>Today datetime (including time of a day) for algorythm FixedDate</value>
  </data>
  <data name="TimeToExpiry2.UseDays.Name" xml:space="preserve">
    <value>Use days</value>
  </data>
  <data name="TimeToExpiry2.UseDays.Description" xml:space="preserve">
    <value>When true, handler calculates time to expiry as days</value>
  </data>
  <data name="TimeToExpiry2.SeriesIndex.Name" xml:space="preserve">
    <value>Series index</value>
  </data>
  <data name="TimeToExpiry2.SeriesIndex.Description" xml:space="preserve">
    <value>Series index (only alive series) for algorythm ExpiryByNumber</value>
  </data>
  <data name="TimeToExpiry2.Time.Name" xml:space="preserve">
    <value>Time</value>
  </data>
  <data name="TimeToExpiry2.Time.Description" xml:space="preserve">
    <value>Time to expiry (just to show it on ControlPane)</value>
  </data>
  <data name="TimeToExpiry2.CurrentDateShift.Name" xml:space="preserve">
    <value>Current date shift</value>
  </data>
  <data name="TimeToExpiry2.CurrentDateShift.Description" xml:space="preserve">
    <value>Shift current date by calendar time interval</value>
  </data>
  <data name="CentralStrike.ShiftStrike.Name" xml:space="preserve">
    <value>Shift strike</value>
  </data>
  <data name="CentralStrike.ShiftStrike.Description" xml:space="preserve">
    <value>Shift central strike (number of strikes)</value>
  </data>
  <data name="IvOnFAllSeries.RescaleTime.Name" xml:space="preserve">
    <value>Rescale Time</value>
  </data>
  <data name="IvOnFAllSeries.RescaleTime.Description" xml:space="preserve">
    <value>Rescale time-to-expiry to our internal?</value>
  </data>
  <data name="IvOnFAllSeries.DistanceMode.Name" xml:space="preserve">
    <value>Estimation Algo</value>
  </data>
  <data name="IvOnFAllSeries.DistanceMode.Description" xml:space="preserve">
    <value>Algorythm to estimate time-to-expiry</value>
  </data>
  <data name="IvOnFAllSeries.ExpiryTime.Name" xml:space="preserve">
    <value>Expiry Time</value>
  </data>
  <data name="IvOnFAllSeries.ExpiryTime.Description" xml:space="preserve">
    <value>Exact expiration time of day (HH:mm)</value>
  </data>
  <data name="SingleSeriesNumericalDelta.SigmaMult.Name" xml:space="preserve">
    <value>Width multiplier</value>
  </data>
  <data name="SingleSeriesNumericalDelta.SigmaMult.Description" xml:space="preserve">
    <value>Width multiplier</value>
  </data>
  <data name="SingleSeriesNumericalDelta3.SigmaMult.Name" xml:space="preserve">
    <value>Width multiplier</value>
  </data>
  <data name="SingleSeriesNumericalDelta3.SigmaMult.Description" xml:space="preserve">
    <value>Width multiplier</value>
  </data>
  <data name="SingleSeriesNumericalGamma.SigmaMult.Name" xml:space="preserve">
    <value>Width multiplier</value>
  </data>
  <data name="SingleSeriesNumericalGamma.SigmaMult.Description" xml:space="preserve">
    <value>Width multiplier</value>
  </data>
  <data name="SingleSeriesNumericalGamma3.SigmaMult.Name" xml:space="preserve">
    <value>Width multiplier</value>
  </data>
  <data name="SingleSeriesNumericalGamma3.SigmaMult.Description" xml:space="preserve">
    <value>Width multiplier</value>
  </data>
  <data name="SingleSeriesNumericalTheta.SigmaMult.Name" xml:space="preserve">
    <value>Width multiplier</value>
  </data>
  <data name="SingleSeriesNumericalTheta.SigmaMult.Description" xml:space="preserve">
    <value>Width multiplier</value>
  </data>
  <data name="SingleSeriesNumericalVega.SigmaMult.Name" xml:space="preserve">
    <value>Width multiplier</value>
  </data>
  <data name="SingleSeriesNumericalVega.SigmaMult.Description" xml:space="preserve">
    <value>Width multiplier</value>
  </data>
  <data name="SingleSeriesPositionCommissions.Name" xml:space="preserve">
    <value>Single Series Position Commission</value>
  </data>
  <data name="SingleSeriesPositionCommissions.Description" xml:space="preserve">
    <value>Grid of entire option position commissions</value>
  </data>
  <data name="SingleSeriesPositionCommissions.LongPositions.Name" xml:space="preserve">
    <value>Long positions</value>
  </data>
  <data name="SingleSeriesPositionCommissions.LongPositions.Description" xml:space="preserve">
    <value>Prices of long positions</value>
  </data>
  <data name="SingleSeriesPositionCommissions.OptionType.Name" xml:space="preserve">
    <value>Option Type</value>
  </data>
  <data name="SingleSeriesPositionCommissions.OptionType.Description" xml:space="preserve">
    <value>Option type to be used by handler (call, put, sum of both)</value>
  </data>
  <data name="SingleSeriesPositionCommissions.CountFutures.Name" xml:space="preserve">
    <value>Count Futures</value>
  </data>
  <data name="SingleSeriesPositionCommissions.CountFutures.Description" xml:space="preserve">
    <value>Count base asset</value>
  </data>
  <data name="SingleSeriesPositionCommissions.TooltipFormat.Name" xml:space="preserve">
    <value>Tooltip Format</value>
  </data>
  <data name="SingleSeriesPositionCommissions.TooltipFormat.Description" xml:space="preserve">
    <value>Tooltip format (i.e. '0.00', '0.0##' etc)</value>
  </data>
  <data name="SingleSeriesPositionCommissions.SigmaMult.Name" xml:space="preserve">
    <value>Width multiplier</value>
  </data>
  <data name="SingleSeriesPositionCommissions.SigmaMult.Description" xml:space="preserve">
    <value>Width multiplier</value>
  </data>
  <data name="SingleSeriesPositionCommissions.ShowNodes.Name" xml:space="preserve">
    <value>Show nodes</value>
  </data>
  <data name="SingleSeriesPositionCommissions.ShowNodes.Description" xml:space="preserve">
    <value>Nodes are shown when true</value>
  </data>
  <data name="SingleSeriesPositionPrices.Name" xml:space="preserve">
    <value>Single Series Position Prices</value>
  </data>
  <data name="SingleSeriesPositionPrices.Description" xml:space="preserve">
    <value>Grid of average position prices (single option series)</value>
  </data>
  <data name="SingleSeriesPositionPrices.LongPositions.Name" xml:space="preserve">
    <value>Long positions</value>
  </data>
  <data name="SingleSeriesPositionPrices.LongPositions.Description" xml:space="preserve">
    <value>Prices of long positions</value>
  </data>
  <data name="SingleSeriesPositionPrices.OptionType.Name" xml:space="preserve">
    <value>Option Type</value>
  </data>
  <data name="SingleSeriesPositionPrices.OptionType.Description" xml:space="preserve">
    <value>Option type to be used by handler (call, put, sum of both)</value>
  </data>
  <data name="SingleSeriesPositionPrices.CountFutures.Name" xml:space="preserve">
    <value>Count Futures</value>
  </data>
  <data name="SingleSeriesPositionPrices.CountFutures.Description" xml:space="preserve">
    <value>Count base asset</value>
  </data>
  <data name="SingleSeriesPositionPrices.TooltipFormat.Name" xml:space="preserve">
    <value>Tooltip Format</value>
  </data>
  <data name="SingleSeriesPositionPrices.TooltipFormat.Description" xml:space="preserve">
    <value>Tooltip format (i.e. '0.00', '0.0##' etc)</value>
  </data>
  <data name="SingleSeriesPositionPrices.SigmaMult.Name" xml:space="preserve">
    <value>Width multiplier</value>
  </data>
  <data name="SingleSeriesPositionPrices.SigmaMult.Description" xml:space="preserve">
    <value>Width multiplier</value>
  </data>
  <data name="SingleSeriesPositionPrices.ShowNodes.Name" xml:space="preserve">
    <value>Show nodes</value>
  </data>
  <data name="SingleSeriesPositionPrices.ShowNodes.Description" xml:space="preserve">
    <value>Nodes are shown when true</value>
  </data>
  <data name="SetViewport.ManageXGridStep.Name" xml:space="preserve">
    <value>Manage X grid step</value>
  </data>
  <data name="SetViewport.ManageXGridStep.Description" xml:space="preserve">
    <value>Manage horizontal axis grid step</value>
  </data>
  <data name="SetViewport.XAxisStep.Name" xml:space="preserve">
    <value>X axis step</value>
  </data>
  <data name="SetViewport.XAxisStep.Description" xml:space="preserve">
    <value>X axis grid step</value>
  </data>
  <data name="SetViewport.XAxisDivisor.Name" xml:space="preserve">
    <value>X axis divisor</value>
  </data>
  <data name="SetViewport.XAxisDivisor.Description" xml:space="preserve">
    <value>X axis divisor</value>
  </data>
  <data name="AutoHedger.BuyShift.Name" xml:space="preserve">
    <value>Buy shift</value>
  </data>
  <data name="AutoHedger.BuyShift.Description" xml:space="preserve">
    <value>Buy shift (price steps)</value>
  </data>
  <data name="AutoHedger.SellShift.Name" xml:space="preserve">
    <value>Sell shift</value>
  </data>
  <data name="AutoHedger.SellShift.Description" xml:space="preserve">
    <value>Sell shift (price steps)</value>
  </data>
  <data name="IvOnF.RescaleTime.Name" xml:space="preserve">
    <value>Rescale Time</value>
  </data>
  <data name="IvOnF.RescaleTime.Description" xml:space="preserve">
    <value>Rescale time-to-expiry to our internal?</value>
  </data>
  <data name="IvOnF.DistanceMode.Name" xml:space="preserve">
    <value>Estimation Algo</value>
  </data>
  <data name="IvOnF.DistanceMode.Description" xml:space="preserve">
    <value>Algorythm to estimate time-to-expiry</value>
  </data>
  <data name="IvOnF.ExpiryTime.Name" xml:space="preserve">
    <value>Expiry Time</value>
  </data>
  <data name="IvOnF.ExpiryTime.Description" xml:space="preserve">
    <value>Exact expiration time of day (HH:mm)</value>
  </data>
  <data name="IvOnF2.RescaleTime.Name" xml:space="preserve">
    <value>Rescale Time</value>
  </data>
  <data name="IvOnF2.RescaleTime.Description" xml:space="preserve">
    <value>Rescale time-to-expiry to our internal?</value>
  </data>
  <data name="IvOnF2.DistanceMode.Name" xml:space="preserve">
    <value>Estimation Algo</value>
  </data>
  <data name="IvOnF2.DistanceMode.Description" xml:space="preserve">
    <value>Algorythm to estimate time-to-expiry</value>
  </data>
  <data name="IvOnF2.ExpiryTime.Name" xml:space="preserve">
    <value>Expiry Time</value>
  </data>
  <data name="IvOnF2.ExpiryTime.Description" xml:space="preserve">
    <value>Exact expiration time of day (HH:mm)</value>
  </data>
  <data name="TotalProfit.ProfitAlgo.Name" xml:space="preserve">
    <value>Profit algo</value>
  </data>
  <data name="TotalProfit.ProfitAlgo.Description" xml:space="preserve">
    <value>Profit calculation algorytm</value>
  </data>
  <data name="SelectStrike.Name" xml:space="preserve">
    <value>Select strike</value>
  </data>
  <data name="SelectStrike.Description" xml:space="preserve">
    <value>Use drop-down control to select single strike from option series. To use it link 'Strike' property to Control pane.</value>
  </data>
  <data name="SelectStrike.Strike.Name" xml:space="preserve">
    <value>Strike</value>
  </data>
  <data name="SelectStrike.Strike.Description" xml:space="preserve">
    <value>Option strike</value>
  </data>
  <data name="BasePx.RepeatLastPx.Name" xml:space="preserve">
    <value>Repeat Last Px</value>
  </data>
  <data name="BasePx.RepeatLastPx.Description" xml:space="preserve">
    <value>Handler should repeat last known value to avoid further logic errors</value>
  </data>
  <data name="SelectStrike.StrikeStep.Name" xml:space="preserve">
    <value>Strike step</value>
  </data>
  <data name="SelectStrike.StrikeStep.Description" xml:space="preserve">
    <value>Strike step to extract most important options</value>
  </data>
  <data name="BasePx2.RepeatLastPx.Name" xml:space="preserve">
    <value>Repeat Last Px</value>
  </data>
  <data name="BasePx2.RepeatLastPx.Description" xml:space="preserve">
    <value>Handler should repeat last known value to avoid further logic errors</value>
  </data>
  <data name="ConstSmileLevel2.Name" xml:space="preserve">
    <value>Horizontal line</value>
  </data>
  <data name="ConstSmileLevel2.Description" xml:space="preserve">
    <value>Horizontal line at smile chart. Position is defined by 'Value' parameter.</value>
  </data>
  <data name="ConstSmileLevel2.ValuePct.Name" xml:space="preserve">
    <value>Value, %</value>
  </data>
  <data name="ConstSmileLevel2.ValuePct.Description" xml:space="preserve">
    <value>Value (percents)</value>
  </data>
  <data name="ConstSmileLevel2.ShowEdgeLabels.Name" xml:space="preserve">
    <value>Show edge labels</value>
  </data>
  <data name="ConstSmileLevel2.ShowEdgeLabels.Description" xml:space="preserve">
    <value>Show edge labels</value>
  </data>
  <data name="ConstSmileLevel2.SigmaPct.Name" xml:space="preserve">
    <value>Sigma, %</value>
  </data>
  <data name="ConstSmileLevel2.SigmaPct.Description" xml:space="preserve">
    <value>Volatility (percents)</value>
  </data>
  <data name="ConstSmileLevel2.Label.Name" xml:space="preserve">
    <value>Label</value>
  </data>
  <data name="ConstSmileLevel2.Label.Description" xml:space="preserve">
    <value>Label to mark a nodes</value>
  </data>
  <data name="ConstSmileLevel2.SigmaMult.Name" xml:space="preserve">
    <value>Width multiplier</value>
  </data>
  <data name="ConstSmileLevel2.SigmaMult.Description" xml:space="preserve">
    <value>Width multiplier</value>
  </data>
  <data name="ConstSmileLevel2.ShowNodes.Name" xml:space="preserve">
    <value>Show nodes</value>
  </data>
  <data name="ConstSmileLevel2.ShowNodes.Description" xml:space="preserve">
    <value>Nodes are shown when true</value>
  </data>
  <data name="LastValueToParameter.Name" xml:space="preserve">
    <value>Last Value</value>
  </data>
  <data name="LastValueToParameter.Description" xml:space="preserve">
    <value>Convert last value in series to parameter</value>
  </data>
  <data name="LastValueToParameter.Result.Name" xml:space="preserve">
    <value>Display value</value>
  </data>
  <data name="LastValueToParameter.Result.Description" xml:space="preserve">
    <value>Display value (just to show it on ControlPane)</value>
  </data>
  <data name="OptionsBoardNumericalDelta.OptionType.Name" xml:space="preserve">
    <value>Option Type</value>
  </data>
  <data name="OptionsBoardNumericalDelta.OptionType.Description" xml:space="preserve">
    <value>Option type (parameter Any is not recommended)</value>
  </data>
  <data name="OptionsBoardNumericalDelta.GreekAlgo.Name" xml:space="preserve">
    <value>Greek algo</value>
  </data>
  <data name="OptionsBoardNumericalDelta.GreekAlgo.Description" xml:space="preserve">
    <value>FrozenSmile - smile is frozen; ShiftingSmile - smile shifts horizontally without modification</value>
  </data>
  <data name="OptionsBoardNumericalDelta.TooltipFormat.Name" xml:space="preserve">
    <value>Tooltip format</value>
  </data>
  <data name="OptionsBoardNumericalDelta.TooltipFormat.Description" xml:space="preserve">
    <value>Tooltip format (i.e. '0.00', '0.0##' etc)</value>
  </data>
  <data name="OptionsBoardNumericalDelta.SigmaMult.Name" xml:space="preserve">
    <value>Width multiplier</value>
  </data>
  <data name="OptionsBoardNumericalDelta.SigmaMult.Description" xml:space="preserve">
    <value>Width multiplier</value>
  </data>
  <data name="OptionsBoardNumericalDelta.ShowNodes.Name" xml:space="preserve">
    <value>Show nodes</value>
  </data>
  <data name="OptionsBoardNumericalDelta.ShowNodes.Description" xml:space="preserve">
    <value>Nodes are shown when true</value>
  </data>
  <data name="OptionsBoardNumericalGamma.Name" xml:space="preserve">
    <value>Options board numerical gamma</value>
  </data>
  <data name="OptionsBoardNumericalGamma.Description" xml:space="preserve">
    <value>Estimate gamma as function of strikes with numerical differentiation</value>
  </data>
  <data name="OptionsBoardNumericalGamma.OptionType.Name" xml:space="preserve">
    <value>Option Type</value>
  </data>
  <data name="OptionsBoardNumericalGamma.OptionType.Description" xml:space="preserve">
    <value>Option type (parameter Any is not recommended)</value>
  </data>
  <data name="OptionsBoardNumericalGamma.GreekAlgo.Name" xml:space="preserve">
    <value>Greek algo</value>
  </data>
  <data name="OptionsBoardNumericalGamma.GreekAlgo.Description" xml:space="preserve">
    <value>FrozenSmile - smile is frozen; ShiftingSmile - smile shifts horizontally without modification</value>
  </data>
  <data name="OptionsBoardNumericalGamma.TooltipFormat.Name" xml:space="preserve">
    <value>Tooltip format</value>
  </data>
  <data name="OptionsBoardNumericalGamma.TooltipFormat.Description" xml:space="preserve">
    <value>Tooltip format (i.e. '0.00', '0.0##' etc)</value>
  </data>
  <data name="OptionsBoardNumericalGamma.SigmaMult.Name" xml:space="preserve">
    <value>Width Multiplier</value>
  </data>
  <data name="OptionsBoardNumericalGamma.SigmaMult.Description" xml:space="preserve">
    <value>Width Multiplier</value>
  </data>
  <data name="OptionsBoardNumericalGamma.ShowNodes.Name" xml:space="preserve">
    <value>Show Nodes</value>
  </data>
  <data name="OptionsBoardNumericalGamma.ShowNodes.Description" xml:space="preserve">
    <value>Nodes are shown when true</value>
  </data>
  <data name="SmileSelector.Name" xml:space="preserve">
    <value>Select smile</value>
  </data>
  <data name="SmileSelector.Description" xml:space="preserve">
    <value>Select one of several available smiles using handler parameter</value>
  </data>
  <data name="SmileSelector.SmileIndex.Name" xml:space="preserve">
    <value>Input index</value>
  </data>
  <data name="SmileSelector.SmileIndex.Description" xml:space="preserve">
    <value>Input index (start from 1)</value>
  </data>
  <data name="LastValueToParameter.LastValue.Name" xml:space="preserve">
    <value>Last value</value>
  </data>
  <data name="LastValueToParameter.LastValue.Description" xml:space="preserve">
    <value>Last value</value>
  </data>
  <data name="QuoteIv.Name" xml:space="preserve">
    <value>Quote volatility</value>
  </data>
  <data name="QuoteIv.Description" xml:space="preserve">
    <value>Quote volatility</value>
  </data>
  <data name="QuoteIv.Strike.Name" xml:space="preserve">
    <value>Strike</value>
  </data>
  <data name="QuoteIv.Strike.Description" xml:space="preserve">
    <value>Option strike</value>
  </data>
  <data name="QuoteIv.OptionType.Name" xml:space="preserve">
    <value>Option Type</value>
  </data>
  <data name="QuoteIv.OptionType.Description" xml:space="preserve">
    <value>Option type (when Any, the handler will choose out-of-the-money security)</value>
  </data>
  <data name="QuoteIv.ExecuteCommand.Name" xml:space="preserve">
    <value>Execute</value>
  </data>
  <data name="QuoteIv.ExecuteCommand.Description" xml:space="preserve">
    <value>Execute</value>
  </data>
  <data name="QuoteIv.CancelAllLong.Name" xml:space="preserve">
    <value>Cancel all long</value>
  </data>
  <data name="QuoteIv.CancelAllLong.Description" xml:space="preserve">
    <value>Cancel long quotes in all strikes</value>
  </data>
  <data name="QuoteIv.CancelAllShort.Name" xml:space="preserve">
    <value>Cancel all short</value>
  </data>
  <data name="QuoteIv.CancelAllShort.Description" xml:space="preserve">
    <value>Cancel short quotes in all strikes</value>
  </data>
  <data name="QuoteIv.Qty.Name" xml:space="preserve">
    <value>Size</value>
  </data>
  <data name="QuoteIv.Qty.Description" xml:space="preserve">
    <value>Trade quantity. Negative value reverts the signal.</value>
  </data>
  <data name="QuoteIv.ShiftIvPct.Name" xml:space="preserve">
    <value>Shift IV</value>
  </data>
  <data name="QuoteIv.ShiftIvPct.Description" xml:space="preserve">
    <value>Shift quote relative to the smile (in percents of volatility)</value>
  </data>
  <data name="QuoteIv.StrikeStep.Name" xml:space="preserve">
    <value>Strike step</value>
  </data>
  <data name="QuoteIv.StrikeStep.Description" xml:space="preserve">
    <value>Strike step to extract most important options</value>
  </data>
  <data name="QuoteIv.ShiftPrice.Name" xml:space="preserve">
    <value>Shift price</value>
  </data>
  <data name="QuoteIv.ShiftPrice.Description" xml:space="preserve">
    <value>Shift quote relative to the shifted smile (in price steps)</value>
  </data>
  <data name="ShowIvTargets.Name" xml:space="preserve">
    <value>Show IV Targets</value>
  </data>
  <data name="ShowIvTargets.Description" xml:space="preserve">
    <value>Show volatility limit orders</value>
  </data>
  <data name="ShowIvTargets.IsLong.Name" xml:space="preserve">
    <value>Long</value>
  </data>
  <data name="ShowIvTargets.IsLong.Description" xml:space="preserve">
    <value>Show long orders</value>
  </data>
  <data name="SingleSeriesPositionPrices.CountQty.Name" xml:space="preserve">
    <value>Count lot size</value>
  </data>
  <data name="SingleSeriesPositionPrices.CountQty.Description" xml:space="preserve">
    <value>Count lot size</value>
  </data>
  <data name="PositionsManager.CheckSecurityTime.Name" xml:space="preserve">
    <value>Check security time</value>
  </data>
  <data name="PositionsManager.CheckSecurityTime.Description" xml:space="preserve">
    <value>When true it will validate security time before sending order to market</value>
  </data>
  <data name="PrepareLineForCanvasPane.Name" xml:space="preserve">
    <value>Prepare line</value>
  </data>
  <data name="PrepareLineForCanvasPane.Description" xml:space="preserve">
    <value>Merge two series of numbers to InteractiveSeries</value>
  </data>
  <data name="SaveToGlobalCache.Name" xml:space="preserve">
    <value>Save to Global Cache (old)</value>
  </data>
  <data name="SaveToGlobalCache.Description" xml:space="preserve">
    <value>Save any indicator to Global Cache</value>
  </data>
  <data name="SaveToGlobalCache.RepeatLastValue.Name" xml:space="preserve">
    <value>Repeat last value</value>
  </data>
  <data name="SaveToGlobalCache.RepeatLastValue.Description" xml:space="preserve">
    <value>Handler should repeat last known value to avoid further logic errors</value>
  </data>
  <data name="SaveToGlobalCache.MaxValues.Name" xml:space="preserve">
    <value>Maximum numbers</value>
  </data>
  <data name="SaveToGlobalCache.MaxValues.Description" xml:space="preserve">
    <value>Maximum number of stored values. If 0, then it will be limited by the number of bars</value>
  </data>
  <data name="SaveToGlobalCache.SaveToStorage.Name" xml:space="preserve">
    <value>Save to disk</value>
  </data>
  <data name="SaveToGlobalCache.SaveToStorage.Description" xml:space="preserve">
    <value>Save to HDD to use indicator values across different program sessions</value>
  </data>
  <data name="SaveToGlobalCache.ValuesName.Name" xml:space="preserve">
    <value>Values name</value>
  </data>
  <data name="SaveToGlobalCache.ValuesName.Description" xml:space="preserve">
    <value>Unique indicator name to be used to store values in Global Cache</value>
  </data>
  <data name="LoadFromGlobalCache.Name" xml:space="preserve">
    <value>Load from Global Cache (old)</value>
  </data>
  <data name="LoadFromGlobalCache.Description" xml:space="preserve">
    <value>Load indicator from Global Cache</value>
  </data>
  <data name="LoadFromGlobalCache.RepeatLastValue.Name" xml:space="preserve">
    <value>Repeat last value</value>
  </data>
  <data name="LoadFromGlobalCache.RepeatLastValue.Description" xml:space="preserve">
    <value>Handler should repeat last known value to avoid further logic errors</value>
  </data>
  <data name="LoadFromGlobalCache.LoadFromStorage.Name" xml:space="preserve">
    <value>Load from disk</value>
  </data>
  <data name="LoadFromGlobalCache.LoadFromStorage.Description" xml:space="preserve">
    <value>Load from HDD to use indicator values across different program sessions</value>
  </data>
  <data name="LoadFromGlobalCache.AgentName.Name" xml:space="preserve">
    <value>Agent name</value>
  </data>
  <data name="LoadFromGlobalCache.AgentName.Description" xml:space="preserve">
    <value>Name of the agent that writes to Global Cache</value>
  </data>
  <data name="LoadFromGlobalCache.ValuesName.Name" xml:space="preserve">
    <value>Values name</value>
  </data>
  <data name="LoadFromGlobalCache.ValuesName.Description" xml:space="preserve">
    <value>Unique indicator name to be used to store values in Global Cache</value>
  </data>
  <data name="LoadFromGlobalCache.OverrideSymbol.Name" xml:space="preserve">
    <value>Override security</value>
  </data>
  <data name="LoadFromGlobalCache.OverrideSymbol.Description" xml:space="preserve">
    <value>Override security (use this ticker instead of handler's input)</value>
  </data>
  <data name="GlobalSkewOnF.RepeatLastSkew.Description" xml:space="preserve">
    <value>Handler should repeat last known value to avoid further logic errors</value>
  </data>
  <data name="GlobalSkewOnF.SkewMode.Name" xml:space="preserve">
    <value>Skew mode</value>
  </data>
  <data name="GlobalSkewOnF.SkewMode.Description" xml:space="preserve">
    <value>Algorythm to get smile skew</value>
  </data>
  <data name="ShowTrades.Name" xml:space="preserve">
    <value>Show all trades</value>
  </data>
  <data name="ShowTrades.Description" xml:space="preserve">
    <value>Show all security trades on the Chart Pane</value>
  </data>
  <data name="BlackScholesGreeks.SigmaMult.Name" xml:space="preserve">
    <value>Width multiplier</value>
  </data>
  <data name="BlackScholesGreeks.SigmaMult.Description" xml:space="preserve">
    <value>Width multiplier</value>
  </data>
  <data name="OptionsBoardNumericalDelta.FixedQty.Name" xml:space="preserve">
    <value>Size</value>
  </data>
  <data name="OptionsBoardNumericalDelta.FixedQty.Description" xml:space="preserve">
    <value>Entry size of this virtual position</value>
  </data>
  <data name="OwnOrders.ShowLongOrders.Name" xml:space="preserve">
    <value>Show long</value>
  </data>
  <data name="OwnOrders.ShowLongOrders.Description" xml:space="preserve">
    <value>Show long or short orders</value>
  </data>
  <data name="OwnPositionIv.DisplayIv.Name" xml:space="preserve">
    <value>Display IV</value>
  </data>
  <data name="OwnPositionIv.DisplayIv.Description" xml:space="preserve">
    <value>Effective position volatility (only to display at UI)</value>
  </data>
  <data name="OwnPositionIvLine.DisplayIv.Name" xml:space="preserve">
    <value>Display IV</value>
  </data>
  <data name="OwnPositionIvLine.DisplayIv.Description" xml:space="preserve">
    <value>Effective position volatility (only to display at UI)</value>
  </data>
  <data name="PositionsManagerSingle.Name" xml:space="preserve">
    <value>Positions Manager (single security)</value>
  </data>
  <data name="PositionsManagerSingle.Description" xml:space="preserve">
    <value>Manager for virtual and real positions (single security)</value>
  </data>
  <data name="PositionsManagerSingle.BlockTrading.Name" xml:space="preserve">
    <value>Block Trading</value>
  </data>
  <data name="PositionsManagerSingle.BlockTrading.Description" xml:space="preserve">
    <value>When true trading is completely blocked to avoid user misclick errors</value>
  </data>
  <data name="PositionsManagerSingle.UseVirtualPositions.Name" xml:space="preserve">
    <value>Virtual Positions</value>
  </data>
  <data name="PositionsManagerSingle.UseVirtualPositions.Description" xml:space="preserve">
    <value>When true it will create only virtual positions without sending orders in market</value>
  </data>
  <data name="PositionsManagerSingle.AgregatePositions.Name" xml:space="preserve">
    <value>Agregate positions</value>
  </data>
  <data name="PositionsManagerSingle.AgregatePositions.Description" xml:space="preserve">
    <value>When true it will agregate positions of similar directions in one</value>
  </data>
  <data name="PositionsManagerSingle.DropVirtualPos.Name" xml:space="preserve">
    <value>Drop Virtual Positions</value>
  </data>
  <data name="PositionsManagerSingle.DropVirtualPos.Description" xml:space="preserve">
    <value>Drop virtual positions</value>
  </data>
  <data name="PositionsManagerSingle.ImportRealPos.Name" xml:space="preserve">
    <value>Import Real Pos</value>
  </data>
  <data name="PositionsManagerSingle.ImportRealPos.Description" xml:space="preserve">
    <value>Button to import real positions</value>
  </data>
  <data name="PositionsManagerSingle.UseGlobalCache.Name" xml:space="preserve">
    <value>Use Global Cache</value>
  </data>
  <data name="PositionsManagerSingle.UseGlobalCache.Description" xml:space="preserve">
    <value>Use global cache</value>
  </data>
  <data name="PositionsManagerSingle.CheckSecurityTime.Name" xml:space="preserve">
    <value>Check security time</value>
  </data>
  <data name="PositionsManagerSingle.CheckSecurityTime.Description" xml:space="preserve">
    <value>When true it will validate security time before sending order to market</value>
  </data>
  <data name="SingleSeriesNumericalSpeed.Name" xml:space="preserve">
    <value>Single Series Numerical Speed</value>
  </data>
  <data name="SingleSeriesNumericalSpeed.Description" xml:space="preserve">
    <value>Estimate 'Speed' profile with numerical differentiation</value>
  </data>
  <data name="SingleSeriesNumericalSpeed.GreekAlgo.Name" xml:space="preserve">
    <value>Greek Algo</value>
  </data>
  <data name="SingleSeriesNumericalSpeed.GreekAlgo.Description" xml:space="preserve">
    <value>FrozenSmile - smile is frozen; ShiftingSmile - smile shifts horizontally without modification</value>
  </data>
  <data name="SingleSeriesNumericalSpeed.TooltipFormat.Name" xml:space="preserve">
    <value>Tooltip Format</value>
  </data>
  <data name="SingleSeriesNumericalSpeed.TooltipFormat.Description" xml:space="preserve">
    <value>Tooltip format (i.e. '0.00', '0.0##' etc)</value>
  </data>
  <data name="SingleSeriesNumericalSpeed.SigmaMult.Name" xml:space="preserve">
    <value>Width multiplier</value>
  </data>
  <data name="SingleSeriesNumericalSpeed.SigmaMult.Description" xml:space="preserve">
    <value>Width multiplier</value>
  </data>
  <data name="SingleSeriesNumericalSpeed.ShowNodes.Name" xml:space="preserve">
    <value>Show nodes</value>
  </data>
  <data name="SingleSeriesNumericalSpeed.ShowNodes.Description" xml:space="preserve">
    <value>Nodes are shown when true</value>
  </data>
  <data name="IvSmileRescaled2.OptPxMode.Name" xml:space="preserve">
    <value>Price mode</value>
  </data>
  <data name="IvSmileRescaled2.OptPxMode.Description" xml:space="preserve">
    <value>Algorythm to get option price</value>
  </data>
  <data name="IvSmileRescaled2.OptionType.Name" xml:space="preserve">
    <value>Option type</value>
  </data>
  <data name="IvSmileRescaled2.OptionType.Description" xml:space="preserve">
    <value>Option type to be used by handler (call, put, best volatility)</value>
  </data>
  <data name="IvSmileRescaled2.ShiftBid.Name" xml:space="preserve">
    <value>Shift Bid</value>
  </data>
  <data name="IvSmileRescaled2.ShiftBid.Description" xml:space="preserve">
    <value>Shift Bids down (price steps)</value>
  </data>
  <data name="IvSmileRescaled2.ShiftAsk.Name" xml:space="preserve">
    <value>Shift Ask</value>
  </data>
  <data name="IvSmileRescaled2.ShiftAsk.Description" xml:space="preserve">
    <value>Shift Asks up (price steps)</value>
  </data>
  <data name="IvSmileRescaled2.MaxSigmaPct.Name" xml:space="preserve">
    <value>Max sigma, %</value>
  </data>
  <data name="IvSmileRescaled2.MaxSigmaPct.Description" xml:space="preserve">
    <value>Maximum volatility (percents)</value>
  </data>
  <data name="QuoteIvDeribit.Name" xml:space="preserve">
    <value>Quote volatility (Deribit)</value>
  </data>
  <data name="QuoteIvDeribit.Description" xml:space="preserve">
    <value>Quote volatility (special for Deribit)</value>
  </data>
  <data name="QuoteIvDeribit.Strike.Name" xml:space="preserve">
    <value>Strike</value>
  </data>
  <data name="QuoteIvDeribit.Strike.Description" xml:space="preserve">
    <value>Option strike</value>
  </data>
  <data name="QuoteIvDeribit.OptionType.Name" xml:space="preserve">
    <value>Option Type</value>
  </data>
  <data name="QuoteIvDeribit.OptionType.Description" xml:space="preserve">
    <value>Option type (when Any, the handler will choose out-of-the-money security)</value>
  </data>
  <data name="QuoteIvDeribit.ExecuteCommand.Name" xml:space="preserve">
    <value>Execute</value>
  </data>
  <data name="QuoteIvDeribit.ExecuteCommand.Description" xml:space="preserve">
    <value>Execute</value>
  </data>
  <data name="QuoteIvDeribit.CancelAllLong.Name" xml:space="preserve">
    <value>Cancel all long</value>
  </data>
  <data name="QuoteIvDeribit.CancelAllLong.Description" xml:space="preserve">
    <value>Cancel long quotes in all strikes</value>
  </data>
  <data name="QuoteIvDeribit.CancelAllShort.Name" xml:space="preserve">
    <value>Cancel all short</value>
  </data>
  <data name="QuoteIvDeribit.CancelAllShort.Description" xml:space="preserve">
    <value>Cancel short quotes in all strikes</value>
  </data>
  <data name="QuoteIvDeribit.Qty.Name" xml:space="preserve">
    <value>Size</value>
  </data>
  <data name="QuoteIvDeribit.Qty.Description" xml:space="preserve">
    <value>Trade quantity. Negative value reverts the signal.</value>
  </data>
  <data name="QuoteIvDeribit.ShiftIvPct.Name" xml:space="preserve">
    <value>Shift IV</value>
  </data>
  <data name="QuoteIvDeribit.ShiftIvPct.Description" xml:space="preserve">
    <value>Shift quote relative to the smile (in percents of volatility)</value>
  </data>
  <data name="QuoteIvDeribit.ShiftPrice.Name" xml:space="preserve">
    <value>Shift price</value>
  </data>
  <data name="QuoteIvDeribit.ShiftPrice.Description" xml:space="preserve">
    <value>Shift quote relative to the shifted smile (in price steps)</value>
  </data>
  <data name="QuoteIvDeribit.StrikeStep.Name" xml:space="preserve">
    <value>Strike step</value>
  </data>
  <data name="QuoteIvDeribit.StrikeStep.Description" xml:space="preserve">
    <value>Strike step to extract most important options</value>
  </data>
  <data name="ShowIvTargetsDeribit.Name" xml:space="preserve">
    <value>Show IV Targets (Deribit)</value>
  </data>
  <data name="ShowIvTargetsDeribit.Description" xml:space="preserve">
    <value>Show volatility limit orders (special for Deribit)</value>
  </data>
  <data name="ShowIvTargetsDeribit.IsLong.Name" xml:space="preserve">
    <value>Long</value>
  </data>
  <data name="ShowIvTargetsDeribit.IsLong.Description" xml:space="preserve">
    <value>Show long orders</value>
  </data>
  <data name="SingleSeriesNumericalDeltaDeribit3.Name" xml:space="preserve">
    <value>Numerical delta Deribit (IntSer)</value>
  </data>
  <data name="SingleSeriesNumericalDeltaDeribit3.Description" xml:space="preserve">
    <value>Estimates a delta using a position profile</value>
  </data>
  <data name="SingleSeriesNumericalDeltaDeribit3.FutNominal.Name" xml:space="preserve">
    <value>Futures nominal</value>
  </data>
  <data name="SingleSeriesNumericalDeltaDeribit3.FutNominal.Description" xml:space="preserve">
    <value>Nominal value of Deribit futures (by default is 10 USD)</value>
  </data>
  <data name="SingleSeriesNumericalDeltaDeribit3.ProfileAsBtc.Name" xml:space="preserve">
    <value>Profile in BTC?</value>
  </data>
  <data name="SingleSeriesNumericalDeltaDeribit3.ProfileAsBtc.Description" xml:space="preserve">
    <value>Calculate profile as bitcoins</value>
  </data>
  <data name="SingleSeriesNumericalDeltaDeribit3.TooltipFormat.Name" xml:space="preserve">
    <value>Tooltip Format</value>
  </data>
  <data name="SingleSeriesNumericalDeltaDeribit3.TooltipFormat.Description" xml:space="preserve">
    <value>Tooltip format (i.e. '0.00', '0.0##' etc)</value>
  </data>
  <data name="SingleSeriesNumericalDeltaDeribit3.SigmaMult.Name" xml:space="preserve">
    <value>Width multiplier</value>
  </data>
  <data name="SingleSeriesNumericalDeltaDeribit3.SigmaMult.Description" xml:space="preserve">
    <value>Width multiplier</value>
  </data>
  <data name="SingleSeriesNumericalDeltaDeribit3.ShowNodes.Name" xml:space="preserve">
    <value>Show nodes</value>
  </data>
  <data name="SingleSeriesNumericalDeltaDeribit3.ShowNodes.Description" xml:space="preserve">
    <value>Nodes are shown when true</value>
  </data>
  <data name="SingleSeriesProfileDeribit.Name" xml:space="preserve">
    <value>Single series profile (Deribit)</value>
  </data>
  <data name="SingleSeriesProfileDeribit.Description" xml:space="preserve">
    <value>A single series position profile (change of currency rate is not included) as a function of BA price (special for Deribit)</value>
  </data>
  <data name="SingleSeriesProfileDeribit.GreekAlgo.Name" xml:space="preserve">
    <value>Greek Algo</value>
  </data>
  <data name="SingleSeriesProfileDeribit.GreekAlgo.Description" xml:space="preserve">
    <value>FrozenSmile - smile is frozen; ShiftingSmile - smile shifts horizontally without modification</value>
  </data>
  <data name="SingleSeriesProfileDeribit.TooltipFormat.Name" xml:space="preserve">
    <value>Tooltip Format</value>
  </data>
  <data name="SingleSeriesProfileDeribit.TooltipFormat.Description" xml:space="preserve">
    <value>Tooltip format (i.e. '0.00', '0.0##' etc)</value>
  </data>
  <data name="SingleSeriesProfileDeribit.TwoSideDelta.Name" xml:space="preserve">
    <value>Two side delta</value>
  </data>
  <data name="SingleSeriesProfileDeribit.TwoSideDelta.Description" xml:space="preserve">
    <value>Calculate delta to the left and to the right from the strike</value>
  </data>
  <data name="SingleSeriesProfileDeribit.FutNominal.Name" xml:space="preserve">
    <value>Futures nominal</value>
  </data>
  <data name="SingleSeriesProfileDeribit.FutNominal.Description" xml:space="preserve">
    <value>Nominal value of Deribit futures (by default is 10 USD)</value>
  </data>
  <data name="SingleSeriesProfileDeribit.ProfileAsBtc.Name" xml:space="preserve">
    <value>Profile in BTC?</value>
  </data>
  <data name="SingleSeriesProfileDeribit.ProfileAsBtc.Description" xml:space="preserve">
    <value>Calculate profile as bitcoins</value>
  </data>
  <data name="SingleSeriesProfileDeribit.SigmaMult.Name" xml:space="preserve">
    <value>Width multiplier</value>
  </data>
  <data name="SingleSeriesProfileDeribit.SigmaMult.Description" xml:space="preserve">
    <value>Width multiplier</value>
  </data>
  <data name="SingleSeriesProfileDeribit.ShowNodes.Name" xml:space="preserve">
    <value>Show nodes</value>
  </data>
  <data name="SingleSeriesProfileDeribit.ShowNodes.Description" xml:space="preserve">
    <value>Nodes are shown when true</value>
  </data>
  <data name="SmileImitationDeribit5.Name" xml:space="preserve">
    <value>Smile Imitation v5 (Deribit)</value>
  </data>
  <data name="SmileImitationDeribit5.Description" xml:space="preserve">
    <value>Smile imitation using application-wide user function in Global Cache</value>
  </data>
  <data name="SmileImitationDeribit5.SetIvByHands.Name" xml:space="preserve">
    <value>Set IV</value>
  </data>
  <data name="SmileImitationDeribit5.SetIvByHands.Description" xml:space="preserve">
    <value>Set IV manually</value>
  </data>
  <data name="SmileImitationDeribit5.SetSlopeByHands.Name" xml:space="preserve">
    <value>Set Skew Manually</value>
  </data>
  <data name="SmileImitationDeribit5.SetSlopeByHands.Description" xml:space="preserve">
    <value>Set skew manually</value>
  </data>
  <data name="SmileImitationDeribit5.SetShapeByHands.Name" xml:space="preserve">
    <value>Set Shape Manually</value>
  </data>
  <data name="SmileImitationDeribit5.SetShapeByHands.Description" xml:space="preserve">
    <value>Set shape manually</value>
  </data>
  <data name="SmileImitationDeribit5.GenerateTails.Name" xml:space="preserve">
    <value>Generate Tails</value>
  </data>
  <data name="SmileImitationDeribit5.GenerateTails.Description" xml:space="preserve">
    <value>Generate invisible tails</value>
  </data>
  <data name="SmileImitationDeribit5.UseLocalTemplate.Name" xml:space="preserve">
    <value>Use Local Template</value>
  </data>
  <data name="SmileImitationDeribit5.UseLocalTemplate.Description" xml:space="preserve">
    <value>Use template from global or from local cache</value>
  </data>
  <data name="SmileImitationDeribit5.IvAtmPct.Name" xml:space="preserve">
    <value>IV ATM, %</value>
  </data>
  <data name="SmileImitationDeribit5.IvAtmPct.Description" xml:space="preserve">
    <value>IV ATM (percents)</value>
  </data>
  <data name="SmileImitationDeribit5.SlopePct.Name" xml:space="preserve">
    <value>Skew, %</value>
  </data>
  <data name="SmileImitationDeribit5.SlopePct.Description" xml:space="preserve">
    <value>Skew (percents)</value>
  </data>
  <data name="SmileImitationDeribit5.ShapePct.Name" xml:space="preserve">
    <value>Shape, %</value>
  </data>
  <data name="SmileImitationDeribit5.ShapePct.Description" xml:space="preserve">
    <value>Shape (percents)</value>
  </data>
  <data name="SmileImitationDeribit5.FrozenSmileID.Name" xml:space="preserve">
    <value>Frozen Smile ID</value>
  </data>
  <data name="SmileImitationDeribit5.FrozenSmileID.Description" xml:space="preserve">
    <value>Smile ID to be used with Local Cache</value>
  </data>
  <data name="SmileImitationDeribit5.GlobalSmileID.Name" xml:space="preserve">
    <value>Global Smile ID</value>
  </data>
  <data name="SmileImitationDeribit5.GlobalSmileID.Description" xml:space="preserve">
    <value>Smile ID to be used with Global Cache</value>
  </data>
  <data name="SmileImitationDeribit5.SigmaMult.Name" xml:space="preserve">
    <value>Width multiplier</value>
  </data>
  <data name="SmileImitationDeribit5.SigmaMult.Description" xml:space="preserve">
    <value>Width multiplier</value>
  </data>
  <data name="SmileImitationDeribit5.ShowNodes.Name" xml:space="preserve">
    <value>Show nodes</value>
  </data>
  <data name="SmileImitationDeribit5.ShowNodes.Description" xml:space="preserve">
    <value>Nodes are shown when true</value>
  </data>
  <data name="Strike" xml:space="preserve">
    <value>Strike</value>
  </data>
  <data name="Delta" xml:space="preserve">
    <value>Delta</value>
  </data>
  <data name="OptionSeries" xml:space="preserve">
    <value>Option series</value>
  </data>
</root>